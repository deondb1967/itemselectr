[{"path":"https://deondb1967.github.io/itemselectr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gideon P. de Bruin. Author, maintainer.","code":""},{"path":"https://deondb1967.github.io/itemselectr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"de Bruin G (2024). itemselectr: Package Functions Select Items Test. R package version 0.1, https://deondb1967.github.io/itemselectr/.","code":"@Manual{,   title = {itemselectr: A Package with Functions to Select Items for a Test},   author = {Gideon P. {de Bruin}},   year = {2024},   note = {R package version 0.1},   url = {https://deondb1967.github.io/itemselectr/}, }"},{"path":"https://deondb1967.github.io/itemselectr/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"A Package with Functions to Select Items for a Test","text":"package free software; can redistribute /modify terms GNU General Public License, version 3, published Free Software Foundation. program distributed hope useful, without warranty; without even implied warranty merchantability fitness particular purpose. See GNU General Public License details. copy GNU General Public License, version 3, available https://www.r-project.org/Licenses/GPL-3","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/ANCOVA.dif.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs a differential item functioning analysis of polytomous items using ANCOVA — ANCOVA.dif","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — ANCOVA.dif","text":"Differential item functioning analysis polytomous items via ANCOVA","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/ANCOVA.dif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — ANCOVA.dif","text":"","code":"ANCOVA.dif(x, Group, Trait)"},{"path":"https://deondb1967.github.io/itemselectr/reference/ANCOVA.dif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — ANCOVA.dif","text":"x data frame containing items. items scored direction. Group factor indicating group membership Trait vector containing measures trait. may total scores across items, mean item scores, factor scores, IRT person measures.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/ANCOVA.dif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — ANCOVA.dif","text":"","code":"# Differential item functioning across gender ## Calculate the Trait score Trait <- rowSums(work_stress[1:9])  #### Perform the DIF analysis out <- ANCOVA.dif(work_stress[1:9], work_stress$gender, Trait) out #> $Results #>   Item Trait_p Group_p  TxG_p Trait_eta.sq Group_eta.sq TxG_eta.sq #> 1 GWS1       0 0.26265 0.4402       0.6248     0.000343   0.000163 #> 2 GWS2       0 0.32465 0.2101       0.6199     0.000268   0.000434 #> 3 GWS3       0 0.01207 0.6084       0.6262     0.001711   0.000071 #> 4 GWS4       0 0.18434 0.9555       0.6141     0.000495   0.000001 #> 5 GWS5       0 0.20207 0.7887       0.5972     0.000477   0.000021 #> 6 GWS6       0 0.02527 0.8207       0.5938     0.001479   0.000015 #> 7 GWS7       0 0.12598 0.5350       0.6012     0.000680   0.000112 #> 8 GWS8       0 0.59393 0.8373       0.5990     0.000083   0.000012 #> 9 GWS9       0 0.64020 0.1100       0.5763     0.000067   0.000788 #>  #> $Most.uniform.dif #>   Item Trait_eta.sq Group_eta.sq TxG_eta.sq #> 3 GWS3       0.6262     0.001711 0.00007116 #>  #> $Most.non.uniform.dif #>   Item Trait_eta.sq Group_eta.sq TxG_eta.sq #> 9 GWS9       0.5763   0.00006732  0.0007877 #>"},{"path":"https://deondb1967.github.io/itemselectr/reference/Rasch.DIF.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs a differential item functioning analysis of polytomous items using ANCOVA — Rasch.DIF","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — Rasch.DIF","text":"Differential item functioning analysis polytomous items via ANCOVA","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/Rasch.DIF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — Rasch.DIF","text":"","code":"Rasch.DIF(std.res, group, thetas)"},{"path":"https://deondb1967.github.io/itemselectr/reference/Rasch.DIF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — Rasch.DIF","text":"std.res data frame containing standardized residuals Rasch analysis group factor indicating group membership thetas vector containing measures trait. may total scores across items, mean item scores, factor scores, IRT person measures.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/Rasch.DIF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — Rasch.DIF","text":"","code":"# Lowest response category must be scored as 0 work_stress0 <- work_stress[1:9] - 1 d <- Simple.Rasch(work_stress0, \"PCM2\") #>  #> Attaching package: ‘psych’ #> The following object is masked from ‘package:itemselectr’: #>  #>     reverse.code #> Loading required package: CDM #> Loading required package: mvtnorm #> ********************************** #> ** CDM 8.2-6 (2022-08-25 15:43:23)        #> ** Cognitive Diagnostic Models  ** #> ********************************** #> * TAM 4.2-21 (2024-02-19 18:52:08) #> ------------------------------------------------------------ #> TAM 4.2-21 (2024-02-19 18:52:08)  #> R version 4.4.2 (2024-10-31) x86_64, linux-gnu | nodename=fv-az570-222 | login=unknown  #>  #> Date of Analysis: 2024-12-13 12:39:10.41131  #> Time difference of 0.2159 secs #> Computation time: 0.2159  #>  #> Multidimensional Item Response Model in TAM  #>  #> IRT Model: PCM2 #> Call: #> TAM::tam.mml(resp = raschdata, irtmodel = irtmodel, verbose = FALSE) #>  #> ------------------------------------------------------------ #> Number of iterations = 83  #> Numeric integration with 21 integration points #>  #> Deviance = 26897  #> Log likelihood = -13448  #> Number of persons = 1377  #> Number of persons used = 1377  #> Number of items = 9  #> Number of estimated parameters = 37  #>     Item threshold parameters = 36  #>     Item slope parameters = 0  #>     Regression parameters = 0  #>     Variance/covariance parameters = 1  #>  #> AIC = 26971  | penalty=74    | AIC=-2*LL + 2*p  #> AIC3 = 27008  | penalty=111    | AIC3=-2*LL + 3*p  #> BIC = 27164  | penalty=267.42    | BIC=-2*LL + log(n)*p  #> aBIC = 27047  | penalty=149.78    | aBIC=-2*LL + log((n-2)/24)*p  (adjusted BIC)  #> CAIC = 27201  | penalty=304.42    | CAIC=-2*LL + [log(n)+1]*p  (consistent AIC)  #> AICc = 26973  | penalty=76.1    | AICc=-2*LL + 2*p + 2*p*(p+1)/(n-p-1)  (bias corrected AIC)  #> GHP = 1.088     | GHP=( -LL + p ) / (#Persons * #Items)  (Gilula-Haberman log penalty)  #>  #> ------------------------------------------------------------ #> EAP Reliability #> [1] 0.907 #> ------------------------------------------------------------ #> Covariances and Variances #>       [,1] #> [1,] 2.854 #> ------------------------------------------------------------ #> Correlations and Standard Deviations (in the diagonal) #>       [,1] #> [1,] 1.689 #> ------------------------------------------------------------ #> Regression Coefficients #>      [,1] #> [1,]    0 #> ------------------------------------------------------------ #> Item Parameters -A*Xsi #>   item    N     M xsi.item AXsi_.Cat1 AXsi_.Cat2 AXsi_.Cat3 AXsi_.Cat4 #> 1 GWS1 1377 1.601    0.775     -1.635     -2.141      0.139      3.100 #> 2 GWS2 1377 1.136    1.455     -0.373      0.407      2.913      5.821 #> 3 GWS3 1377 1.240    1.410     -1.191     -0.330      2.086      5.640 #> 4 GWS4 1377 1.224    1.527     -0.786     -0.177      2.091      6.109 #> 5 GWS5 1377 1.067    1.989     -0.990      0.253      3.320      7.956 #> 6 GWS6 1377 1.084    1.956     -1.201      0.147      3.183      7.824 #> 7 GWS7 1377 1.680    0.685     -2.406     -2.584     -1.033      2.740 #> 8 GWS8 1377 0.942    2.198     -0.575      0.892      4.403      8.791 #> 9 GWS9 1377 1.013    1.910     -0.750      0.635      3.803      7.642 #>   B.Cat1.Dim1 B.Cat2.Dim1 B.Cat3.Dim1 B.Cat4.Dim1 #> 1           1           2           3           4 #> 2           1           2           3           4 #> 3           1           2           3           4 #> 4           1           2           3           4 #> 5           1           2           3           4 #> 6           1           2           3           4 #> 7           1           2           3           4 #> 8           1           2           3           4 #> 9           1           2           3           4 #>  #> Item Parameters Xsi #>               xsi se.xsi #> GWS1        0.775  0.039 #> GWS2        1.455  0.038 #> GWS3        1.410  0.040 #> GWS4        1.527  0.039 #> GWS5        1.989  0.043 #> GWS6        1.956  0.043 #> GWS7        0.685  0.040 #> GWS8        2.198  0.043 #> GWS9        1.910  0.042 #> GWS1_step1 -2.410  0.078 #> GWS1_step2 -1.281  0.065 #> GWS1_step3  1.505  0.093 #> GWS2_step1 -1.828  0.067 #> GWS2_step2 -0.675  0.071 #> GWS2_step3  1.051  0.112 #> GWS3_step1 -2.601  0.071 #> GWS3_step2 -0.548  0.070 #> GWS3_step3  1.005  0.107 #> GWS4_step1 -2.313  0.071 #> GWS4_step2 -0.919  0.070 #> GWS4_step3  0.741  0.101 #> GWS5_step1 -2.979  0.072 #> GWS5_step2 -0.747  0.074 #> GWS5_step3  1.078  0.130 #> GWS6_step1 -3.157  0.073 #> GWS6_step2 -0.609  0.075 #> GWS6_step3  1.080  0.130 #> GWS7_step1 -3.091  0.086 #> GWS7_step2 -0.863  0.066 #> GWS7_step3  0.866  0.081 #> GWS8_step1 -2.773  0.069 #> GWS8_step2 -0.731  0.078 #> GWS8_step3  1.313  0.152 #> GWS9_step1 -2.660  0.069 #> GWS9_step2 -0.526  0.076 #> GWS9_step3  1.258  0.138 #>  #> Item Parameters in IRT parameterization #>   item alpha  beta tau.Cat1 tau.Cat2 tau.Cat3 tau.Cat4 #> 1 GWS1     1 0.775   -2.410   -1.281    1.505    2.186 #> 2 GWS2     1 1.455   -1.828   -0.675    1.051    1.452 #> 3 GWS3     1 1.410   -2.601   -0.548    1.005    2.144 #> 4 GWS4     1 1.527   -2.313   -0.919    0.741    2.491 #> 5 GWS5     1 1.989   -2.979   -0.747    1.078    2.647 #> 6 GWS6     1 1.956   -3.157   -0.609    1.080    2.686 #> 7 GWS7     1 0.685   -3.091   -0.863    0.866    3.088 #> 8 GWS8     1 2.198   -2.773   -0.731    1.313    2.190 #> 9 GWS9     1 1.910   -2.660   -0.526    1.258    1.928 #> Iteration in WLE/MLE estimation  1   | Maximal change  2.5957  #> Iteration in WLE/MLE estimation  2   | Maximal change  0.9823  #> Iteration in WLE/MLE estimation  3   | Maximal change  0.5808  #> Iteration in WLE/MLE estimation  4   | Maximal change  0.1707  #> Iteration in WLE/MLE estimation  5   | Maximal change  0.0036  #> Iteration in WLE/MLE estimation  6   | Maximal change  0.0002  #> Iteration in WLE/MLE estimation  7   | Maximal change  0  #> ---- #>  WLE Reliability= 0.886           #> .................................................... #>  Plots exported in png format into folder: #>  /home/runner/work/itemselectr/itemselectr/docs/reference/Plots #> Error: Package 'plyr' is needed for applying this #>             function. Please install it.  # Store the standardized residuals as a data frame d$std.residuals <- data.frame(d$std.residuals) #> Error: object 'd' not found  # Perform the dif analysis out <- Rasch.DIF(d$std.residuals, work_stress$gender, d$thetas[,1]) #> Error: object 'd' not found out #> Error: object 'out' not found"},{"path":"https://deondb1967.github.io/itemselectr/reference/RaschItemAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Rasch analysis of polytomous items with the partial credit model — RaschItemAnalysis","title":"Rasch analysis of polytomous items with the partial credit model — RaschItemAnalysis","text":"Basic Rasch analysis polytomous items using partial credit model. function wrapper PCM() function eRm package. purpose function simplify Rasch analysis process produce output users typically want.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/RaschItemAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rasch analysis of polytomous items with the partial credit model — RaschItemAnalysis","text":"","code":"RaschItemAnalysis(x)"},{"path":"https://deondb1967.github.io/itemselectr/reference/RaschItemAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rasch analysis of polytomous items with the partial credit model — RaschItemAnalysis","text":"x data frame containing items lowest response category scored 0","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/RaschItemAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rasch analysis of polytomous items with the partial credit model — RaschItemAnalysis","text":"output list containing results analysis.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/RaschItemAnalysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rasch analysis of polytomous items with the partial credit model — RaschItemAnalysis","text":"","code":"# Lowest response category must be scored as 0 work_stress0 <- work_stress[1:9] - 1  ## Fit the partial credit model out <- RaschItemAnalysis(work_stress0)   #>        Separation Reliability: 0.8886 #>  #>             Observed Variance: 2.637 (Squared Standard Deviation) #> Mean Square Measurement Error: 0.2939 (Model Error Variance)   #> Score group 1:  #>      mean obs mean exp std.res sig #> GWS1  1.0180   1.0308  -0.5024     #> GWS2  0.4662   0.4652   0.0448     #> GWS3  0.6617   0.6643  -0.1181     #> GWS4  0.6180   0.5947   1.0001     #> GWS5  0.5669   0.5690  -0.0991     #> GWS6  0.6105   0.6159  -0.2588     #> GWS7  1.1338   1.1355  -0.0685     #> GWS8  0.4391   0.4539  -0.7332     #> GWS9  0.5278   0.5007   1.3174     #>  #> Score group 2:  #>      mean obs mean exp std.res sig #> GWS1  2.3005   2.2862   0.5508     #> GWS2  1.8847   1.8854  -0.0251     #> GWS3  1.9044   1.9015   0.1021     #> GWS4  1.9150   1.9386  -0.8313     #> GWS5  1.6388   1.6325   0.2457     #> GWS6  1.6313   1.6258   0.2134     #> GWS7  2.3490   2.3462   0.1083     #> GWS8  1.5068   1.4900   0.6438     #> GWS9  1.5660   1.5903  -0.9045     #>  #>  #>  #> Item targets:  #>  #>   GWS1   GWS2   GWS3   GWS4   GWS5   GWS6   GWS7   GWS8   GWS9  #>  0.894  0.691  0.727 -0.820  1.295  1.168 -0.848  2.103  1.587  #>  #>  #>    Item1 Item2   gamma     se pvalue padj.BH sig   lower   upper #> 1   GWS1  GWS2 -0.0018 0.0470 0.9697  1.0000     -0.0940  0.0904 #> 2   GWS1  GWS3 -0.0675 0.0462 0.1441  1.0000     -0.1581  0.0231 #> 3   GWS1  GWS4  0.0332 0.0458 0.4688  1.0000     -0.0566  0.1229 #> 4   GWS1  GWS5 -0.0331 0.0503 0.5113  1.0000     -0.1317  0.0656 #> 5   GWS1  GWS6  0.0753 0.0501 0.1331  1.0000     -0.0229  0.1734 #> 6   GWS1  GWS7  0.1153 0.0453 0.0109  0.7852      0.0265  0.2040 #> 7   GWS1  GWS8 -0.0540 0.0493 0.2731  1.0000     -0.1505  0.0426 #> 8   GWS1  GWS9 -0.0525 0.0487 0.2805  1.0000     -0.1479  0.0429 #> 9   GWS2  GWS3 -0.0403 0.0478 0.3998  1.0000     -0.1340  0.0535 #> 10  GWS2  GWS4 -0.0121 0.0454 0.7896  1.0000     -0.1010  0.0768 #> 11  GWS2  GWS5 -0.0039 0.0496 0.9365  1.0000     -0.1011  0.0932 #> 12  GWS2  GWS6 -0.1081 0.0506 0.0326  1.0000     -0.2072 -0.0090 #> 13  GWS2  GWS7 -0.0426 0.0465 0.3599  1.0000     -0.1337  0.0486 #> 14  GWS2  GWS8  0.0273 0.0509 0.5922  1.0000     -0.0725  0.1270 #> 15  GWS2  GWS9  0.0501 0.0465 0.2814  1.0000     -0.0411  0.1414 #> 16  GWS3  GWS4 -0.0900 0.0467 0.0538  1.0000     -0.1815  0.0015 #> 17  GWS3  GWS5  0.0654 0.0484 0.1768  1.0000     -0.0295  0.1604 #> 18  GWS3  GWS6  0.0869 0.0497 0.0804  1.0000     -0.0105  0.1843 #> 19  GWS3  GWS7 -0.0198 0.0468 0.6712  1.0000     -0.1115  0.0718 #> 20  GWS3  GWS8 -0.0014 0.0507 0.9784  1.0000     -0.1007  0.0979 #> 21  GWS3  GWS9  0.1074 0.0487 0.0275  1.0000      0.0119  0.2028 #> 22  GWS4  GWS5  0.0069 0.0483 0.8863  1.0000     -0.0877  0.1016 #> 23  GWS4  GWS6 -0.0401 0.0499 0.4222  1.0000     -0.1379  0.0578 #> 24  GWS4  GWS7 -0.0547 0.0474 0.2485  1.0000     -0.1477  0.0382 #> 25  GWS4  GWS8  0.0450 0.0502 0.3696  1.0000     -0.0533  0.1434 #> 26  GWS4  GWS9 -0.0017 0.0463 0.9711  1.0000     -0.0923  0.0890 #> 27  GWS5  GWS6  0.0126 0.0535 0.8146  1.0000     -0.0924  0.1175 #> 28  GWS5  GWS7  0.0046 0.0481 0.9240  1.0000     -0.0898  0.0990 #> 29  GWS5  GWS8  0.0333 0.0513 0.5167  1.0000     -0.0672  0.1337 #> 30  GWS5  GWS9 -0.0339 0.0497 0.4956  1.0000     -0.1313  0.0636 #> 31  GWS6  GWS7 -0.0037 0.0493 0.9409  1.0000     -0.1003  0.0930 #> 32  GWS6  GWS8 -0.0185 0.0551 0.7376  1.0000     -0.1264  0.0895 #> 33  GWS6  GWS9  0.0372 0.0501 0.4573  1.0000     -0.0609  0.1354 #> 34  GWS7  GWS8  0.0345 0.0495 0.4855  1.0000     -0.0625  0.1315 #> 35  GWS7  GWS9 -0.0603 0.0482 0.2107  1.0000     -0.1547  0.0341 #> 36  GWS8  GWS9 -0.0551 0.0498 0.2681  1.0000     -0.1527  0.0424 #>  #>    Item1 Item2   gamma     se pvalue padj.BH sig   lower   upper #> 1   GWS2  GWS1 -0.0153 0.0468 0.7437       1     -0.1070  0.0764 #> 2   GWS3  GWS1 -0.0626 0.0459 0.1723       1     -0.1525  0.0273 #> 3   GWS3  GWS2 -0.0044 0.0475 0.9270       1     -0.0975  0.0888 #> 4   GWS4  GWS1  0.0231 0.0451 0.6081       1     -0.0652  0.1115 #> 5   GWS4  GWS2 -0.0204 0.0447 0.6480       1     -0.1081  0.0673 #> 6   GWS4  GWS3 -0.0993 0.0462 0.0315       1     -0.1898 -0.0088 #> 7   GWS5  GWS1 -0.0368 0.0493 0.4557       1     -0.1334  0.0598 #> 8   GWS5  GWS2  0.0182 0.0490 0.7096       1     -0.0778  0.1143 #> 9   GWS5  GWS3  0.0626 0.0469 0.1821       1     -0.0294  0.1546 #> 10  GWS5  GWS4  0.0335 0.0478 0.4835       1     -0.0602  0.1271 #> 11  GWS6  GWS1  0.0877 0.0509 0.0851       1     -0.0121  0.1875 #> 12  GWS6  GWS2 -0.0653 0.0505 0.1963       1     -0.1644  0.0338 #> 13  GWS6  GWS3  0.1056 0.0494 0.0326       1      0.0087  0.2025 #> 14  GWS6  GWS4 -0.0097 0.0496 0.8448       1     -0.1069  0.0875 #> 15  GWS6  GWS5  0.0135 0.0537 0.8020       1     -0.0918  0.1187 #> 16  GWS7  GWS1  0.1098 0.0456 0.0161       1      0.0204  0.1992 #> 17  GWS7  GWS2 -0.0275 0.0455 0.5462       1     -0.1167  0.0617 #> 18  GWS7  GWS3 -0.0287 0.0469 0.5412       1     -0.1206  0.0633 #> 19  GWS7  GWS4 -0.0477 0.0472 0.3119       1     -0.1403  0.0448 #> 20  GWS7  GWS5 -0.0115 0.0480 0.8100       1     -0.1056  0.0825 #> 21  GWS7  GWS6 -0.0227 0.0495 0.6466       1     -0.1198  0.0744 #> 22  GWS8  GWS1 -0.0469 0.0501 0.3489       1     -0.1450  0.0512 #> 23  GWS8  GWS2  0.0705 0.0497 0.1561       1     -0.0269  0.1679 #> 24  GWS8  GWS3  0.0171 0.0510 0.7382       1     -0.0829  0.1170 #> 25  GWS8  GWS4  0.0743 0.0501 0.1376       1     -0.0238  0.1725 #> 26  GWS8  GWS5  0.0405 0.0511 0.4272       1     -0.0595  0.1406 #> 27  GWS8  GWS6 -0.0133 0.0550 0.8085       1     -0.1211  0.0944 #> 28  GWS8  GWS7  0.0527 0.0496 0.2883       1     -0.0446  0.1499 #> 29  GWS9  GWS1 -0.0570 0.0476 0.2318       1     -0.1503  0.0364 #> 30  GWS9  GWS2  0.0273 0.0469 0.5600       1     -0.0646  0.1192 #> 31  GWS9  GWS3  0.0849 0.0491 0.0839       1     -0.0114  0.1811 #> 32  GWS9  GWS4  0.0157 0.0461 0.7338       1     -0.0746  0.1060 #> 33  GWS9  GWS5 -0.0453 0.0503 0.3676       1     -0.1440  0.0533 #> 34  GWS9  GWS6  0.0113 0.0504 0.8231       1     -0.0876  0.1101 #> 35  GWS9  GWS7 -0.0628 0.0480 0.1906       1     -0.1568  0.0312 #> 36  GWS9  GWS8 -0.0824 0.0498 0.0981       1     -0.1801  0.0153 #> Error in uniroot(s.theta(m - 0.25), c(-6, 6)): f() values at end points not of opposite sign ls(out) #> Warning: ‘out’ converted to character string #> Error in as.environment(pos): no item called \"out\" on the search list out$Infit.outfit #> Error: object 'out' not found"},{"path":"https://deondb1967.github.io/itemselectr/reference/SchepersCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Item selection based on inter-item covariances — SchepersCluster","title":"Item selection based on inter-item covariances — SchepersCluster","text":"bottom-item selection procedure based inter-item covariances.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/SchepersCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Item selection based on inter-item covariances — SchepersCluster","text":"","code":"SchepersCluster(x, nitems)"},{"path":"https://deondb1967.github.io/itemselectr/reference/SchepersCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Item selection based on inter-item covariances — SchepersCluster","text":"x Data frame containing items scored direction nitems number items select (value lower four)","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/SchepersCluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Item selection based on inter-item covariances — SchepersCluster","text":"list containing () two items constitute core, (b) data frame containing scale statistics, (c) names items included scale","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/SchepersCluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Item selection based on inter-item covariances — SchepersCluster","text":"","code":"# Build a five-item scale using hierarchical clustering approach SchepersCluster(work_stress[1:9], 5) #>  #> Attaching package: ‘MBESS’ #> The following object is masked from ‘package:psych’: #>  #>     cor2cov  #> $core #> [1] \"GWS2\" \"GWS1\" #>  #> $scale.statistics #>   omega alpha   uni tau con  av.r   ECV   TLI   RMS CFI F1.F2 added.item #> 1 0.793 0.793 1.000   1   1 0.561 0.561   NaN 0.000   1  4.75       GWS4 #> 2 0.837 0.837 1.000   1   1 0.562 0.988 1.002 0.004   1  5.98       GWS3 #> 3 0.865 0.865 0.999   1   1 0.563 0.977 1.000 0.009   1  7.00       GWS7 #>   n.items #> 1       3 #> 2       4 #> 3       5 #>  #> $Items.in.scale #> [1] \"GWS2\" \"GWS1\" \"GWS4\" \"GWS3\" \"GWS7\" #>"},{"path":"https://deondb1967.github.io/itemselectr/reference/Simple.Rasch.html","id":null,"dir":"Reference","previous_headings":"","what":"Rasch analysis of dichotomous or polytomous items — Simple.Rasch","title":"Rasch analysis of dichotomous or polytomous items — Simple.Rasch","text":"Basic Rasch analysis dichotomous polytomous items. function wrapper tam.mml() function TAM package principal() function psych package. purpose function simplify Rasch analysis process produce output plots applied beginner users typically want.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/Simple.Rasch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rasch analysis of dichotomous or polytomous items — Simple.Rasch","text":"","code":"Simple.Rasch(raschdata, irtmodel)"},{"path":"https://deondb1967.github.io/itemselectr/reference/Simple.Rasch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rasch analysis of dichotomous or polytomous items — Simple.Rasch","text":"raschdata data frame containing items lowest response category scored 0 irtmodel Rasch model, can \"PCM\", \"PCM2\" \"RSM\".","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/Simple.Rasch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rasch analysis of dichotomous or polytomous items — Simple.Rasch","text":"output list containing results analysis.","code":""},{"path":[]},{"path":"https://deondb1967.github.io/itemselectr/reference/Simple.Rasch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rasch analysis of dichotomous or polytomous items — Simple.Rasch","text":"","code":"# Lowest response category must be scored as 0 work_stress0 <- work_stress[1:9] - 1 # Fit the rating scale model out <- Simple.Rasch(work_stress0, \"RSM\") #> ------------------------------------------------------------ #> TAM 4.2-21 (2024-02-19 18:52:08)  #> R version 4.4.2 (2024-10-31) x86_64, linux-gnu | nodename=fv-az570-222 | login=unknown  #>  #> Date of Analysis: 2024-12-13 12:39:22.39874  #> Time difference of 0.211 secs #> Computation time: 0.211  #>  #> Multidimensional Item Response Model in TAM  #>  #> IRT Model: RSM #> Call: #> TAM::tam.mml(resp = raschdata, irtmodel = irtmodel, verbose = FALSE) #>  #> ------------------------------------------------------------ #> Number of iterations = 90  #> Numeric integration with 21 integration points #>  #> Deviance = 27214  #> Log likelihood = -13607  #> Number of persons = 1377  #> Number of persons used = 1377  #> Number of items = 9  #> Number of estimated parameters = 13  #>     Item threshold parameters = 12  #>     Item slope parameters = 0  #>     Regression parameters = 0  #>     Variance/covariance parameters = 1  #>  #> AIC = 27240  | penalty=26    | AIC=-2*LL + 2*p  #> AIC3 = 27253  | penalty=39    | AIC3=-2*LL + 3*p  #> BIC = 27308  | penalty=93.96    | BIC=-2*LL + log(n)*p  #> aBIC = 27267  | penalty=52.63    | aBIC=-2*LL + log((n-2)/24)*p  (adjusted BIC)  #> CAIC = 27321  | penalty=106.96    | CAIC=-2*LL + [log(n)+1]*p  (consistent AIC)  #> AICc = 27241  | penalty=26.27    | AICc=-2*LL + 2*p + 2*p*(p+1)/(n-p-1)  (bias corrected AIC)  #> GHP = 1.099     | GHP=( -LL + p ) / (#Persons * #Items)  (Gilula-Haberman log penalty)  #>  #> ------------------------------------------------------------ #> EAP Reliability #> [1] 0.906 #> ------------------------------------------------------------ #> Covariances and Variances #>      [,1] #> [1,] 2.78 #> ------------------------------------------------------------ #> Correlations and Standard Deviations (in the diagonal) #>       [,1] #> [1,] 1.667 #> ------------------------------------------------------------ #> Regression Coefficients #>      [,1] #> [1,]    0 #> ------------------------------------------------------------ #> Item Parameters -A*Xsi #>   item    N     M xsi.item AXsi_.Cat1 AXsi_.Cat2 AXsi_.Cat3 AXsi_.Cat4 #> 1 GWS1 1377 1.601    0.723     -1.904     -1.957     -0.170      2.892 #> 2 GWS2 1377 1.136    1.710     -0.917      0.016      2.790      6.839 #> 3 GWS3 1377 1.240    1.478     -1.149     -0.448      2.095      5.911 #> 4 GWS4 1377 1.224    1.513     -1.114     -0.377      2.200      6.052 #> 5 GWS5 1377 1.067    1.869     -0.758      0.335      3.268      7.476 #> 6 GWS6 1377 1.084    1.828     -0.799      0.253      3.146      7.313 #> 7 GWS7 1377 1.680    0.565     -2.061     -2.273     -0.643      2.261 #> 8 GWS8 1377 0.942    2.170     -0.457      0.937      4.171      8.680 #> 9 GWS9 1377 1.013    1.996     -0.631      0.589      3.650      7.985 #>   B.Cat1.Dim1 B.Cat2.Dim1 B.Cat3.Dim1 B.Cat4.Dim1 #> 1           1           2           3           4 #> 2           1           2           3           4 #> 3           1           2           3           4 #> 4           1           2           3           4 #> 5           1           2           3           4 #> 6           1           2           3           4 #> 7           1           2           3           4 #> 8           1           2           3           4 #> 9           1           2           3           4 #>  #> Item Parameters Xsi #>         xsi se.xsi #> GWS1  0.723  0.038 #> GWS2  1.710  0.041 #> GWS3  1.478  0.040 #> GWS4  1.513  0.040 #> GWS5  1.869  0.041 #> GWS6  1.828  0.041 #> GWS7  0.565  0.038 #> GWS8  2.170  0.043 #> GWS9  1.996  0.042 #> Cat1 -2.627  0.024 #> Cat2 -0.776  0.024 #> Cat3  1.064  0.036 #>  #> Item Parameters in IRT parameterization #>   item alpha  beta tau.Cat1 tau.Cat2 tau.Cat3 tau.Cat4 #> 1 GWS1     1 0.723   -2.627   -0.776    1.064    2.339 #> 2 GWS2     1 1.710   -2.627   -0.776    1.064    2.339 #> 3 GWS3     1 1.478   -2.627   -0.776    1.064    2.339 #> 4 GWS4     1 1.513   -2.627   -0.776    1.064    2.339 #> 5 GWS5     1 1.869   -2.627   -0.776    1.064    2.339 #> 6 GWS6     1 1.828   -2.627   -0.776    1.064    2.339 #> 7 GWS7     1 0.565   -2.627   -0.776    1.064    2.339 #> 8 GWS8     1 2.170   -2.627   -0.776    1.064    2.339 #> 9 GWS9     1 1.996   -2.627   -0.776    1.064    2.339 #> Iteration in WLE/MLE estimation  1   | Maximal change  2.5207  #> Iteration in WLE/MLE estimation  2   | Maximal change  0.9592  #> Iteration in WLE/MLE estimation  3   | Maximal change  0.5633  #> Iteration in WLE/MLE estimation  4   | Maximal change  0.1639  #> Iteration in WLE/MLE estimation  5   | Maximal change  0.004  #> Iteration in WLE/MLE estimation  6   | Maximal change  0.0002  #> Iteration in WLE/MLE estimation  7   | Maximal change  0  #> ---- #>  WLE Reliability= 0.885           #> .................................................... #>  Plots exported in png format into folder: #>  /home/runner/work/itemselectr/itemselectr/docs/reference/Plots #> Error: Package 'plyr' is needed for applying this #>             function. Please install it. ls(out) #> Warning: ‘out’ converted to character string #> Error in as.environment(pos): no item called \"out\" on the search list out$item.fit #> Error: object 'out' not found  # Fit the partial credit model out <- Simple.Rasch(work_stress0, \"PCM2\") #> ------------------------------------------------------------ #> TAM 4.2-21 (2024-02-19 18:52:08)  #> R version 4.4.2 (2024-10-31) x86_64, linux-gnu | nodename=fv-az570-222 | login=unknown  #>  #> Date of Analysis: 2024-12-13 12:39:23.048231  #> Time difference of 0.3748 secs #> Computation time: 0.3748  #>  #> Multidimensional Item Response Model in TAM  #>  #> IRT Model: PCM2 #> Call: #> TAM::tam.mml(resp = raschdata, irtmodel = irtmodel, verbose = FALSE) #>  #> ------------------------------------------------------------ #> Number of iterations = 83  #> Numeric integration with 21 integration points #>  #> Deviance = 26897  #> Log likelihood = -13448  #> Number of persons = 1377  #> Number of persons used = 1377  #> Number of items = 9  #> Number of estimated parameters = 37  #>     Item threshold parameters = 36  #>     Item slope parameters = 0  #>     Regression parameters = 0  #>     Variance/covariance parameters = 1  #>  #> AIC = 26971  | penalty=74    | AIC=-2*LL + 2*p  #> AIC3 = 27008  | penalty=111    | AIC3=-2*LL + 3*p  #> BIC = 27164  | penalty=267.42    | BIC=-2*LL + log(n)*p  #> aBIC = 27047  | penalty=149.78    | aBIC=-2*LL + log((n-2)/24)*p  (adjusted BIC)  #> CAIC = 27201  | penalty=304.42    | CAIC=-2*LL + [log(n)+1]*p  (consistent AIC)  #> AICc = 26973  | penalty=76.1    | AICc=-2*LL + 2*p + 2*p*(p+1)/(n-p-1)  (bias corrected AIC)  #> GHP = 1.088     | GHP=( -LL + p ) / (#Persons * #Items)  (Gilula-Haberman log penalty)  #>  #> ------------------------------------------------------------ #> EAP Reliability #> [1] 0.907 #> ------------------------------------------------------------ #> Covariances and Variances #>       [,1] #> [1,] 2.854 #> ------------------------------------------------------------ #> Correlations and Standard Deviations (in the diagonal) #>       [,1] #> [1,] 1.689 #> ------------------------------------------------------------ #> Regression Coefficients #>      [,1] #> [1,]    0 #> ------------------------------------------------------------ #> Item Parameters -A*Xsi #>   item    N     M xsi.item AXsi_.Cat1 AXsi_.Cat2 AXsi_.Cat3 AXsi_.Cat4 #> 1 GWS1 1377 1.601    0.775     -1.635     -2.141      0.139      3.100 #> 2 GWS2 1377 1.136    1.455     -0.373      0.407      2.913      5.821 #> 3 GWS3 1377 1.240    1.410     -1.191     -0.330      2.086      5.640 #> 4 GWS4 1377 1.224    1.527     -0.786     -0.177      2.091      6.109 #> 5 GWS5 1377 1.067    1.989     -0.990      0.253      3.320      7.956 #> 6 GWS6 1377 1.084    1.956     -1.201      0.147      3.183      7.824 #> 7 GWS7 1377 1.680    0.685     -2.406     -2.584     -1.033      2.740 #> 8 GWS8 1377 0.942    2.198     -0.575      0.892      4.403      8.791 #> 9 GWS9 1377 1.013    1.910     -0.750      0.635      3.803      7.642 #>   B.Cat1.Dim1 B.Cat2.Dim1 B.Cat3.Dim1 B.Cat4.Dim1 #> 1           1           2           3           4 #> 2           1           2           3           4 #> 3           1           2           3           4 #> 4           1           2           3           4 #> 5           1           2           3           4 #> 6           1           2           3           4 #> 7           1           2           3           4 #> 8           1           2           3           4 #> 9           1           2           3           4 #>  #> Item Parameters Xsi #>               xsi se.xsi #> GWS1        0.775  0.039 #> GWS2        1.455  0.038 #> GWS3        1.410  0.040 #> GWS4        1.527  0.039 #> GWS5        1.989  0.043 #> GWS6        1.956  0.043 #> GWS7        0.685  0.040 #> GWS8        2.198  0.043 #> GWS9        1.910  0.042 #> GWS1_step1 -2.410  0.078 #> GWS1_step2 -1.281  0.065 #> GWS1_step3  1.505  0.093 #> GWS2_step1 -1.828  0.067 #> GWS2_step2 -0.675  0.071 #> GWS2_step3  1.051  0.112 #> GWS3_step1 -2.601  0.071 #> GWS3_step2 -0.548  0.070 #> GWS3_step3  1.005  0.107 #> GWS4_step1 -2.313  0.071 #> GWS4_step2 -0.919  0.070 #> GWS4_step3  0.741  0.101 #> GWS5_step1 -2.979  0.072 #> GWS5_step2 -0.747  0.074 #> GWS5_step3  1.078  0.130 #> GWS6_step1 -3.157  0.073 #> GWS6_step2 -0.609  0.075 #> GWS6_step3  1.080  0.130 #> GWS7_step1 -3.091  0.086 #> GWS7_step2 -0.863  0.066 #> GWS7_step3  0.866  0.081 #> GWS8_step1 -2.773  0.069 #> GWS8_step2 -0.731  0.078 #> GWS8_step3  1.313  0.152 #> GWS9_step1 -2.660  0.069 #> GWS9_step2 -0.526  0.076 #> GWS9_step3  1.258  0.138 #>  #> Item Parameters in IRT parameterization #>   item alpha  beta tau.Cat1 tau.Cat2 tau.Cat3 tau.Cat4 #> 1 GWS1     1 0.775   -2.410   -1.281    1.505    2.186 #> 2 GWS2     1 1.455   -1.828   -0.675    1.051    1.452 #> 3 GWS3     1 1.410   -2.601   -0.548    1.005    2.144 #> 4 GWS4     1 1.527   -2.313   -0.919    0.741    2.491 #> 5 GWS5     1 1.989   -2.979   -0.747    1.078    2.647 #> 6 GWS6     1 1.956   -3.157   -0.609    1.080    2.686 #> 7 GWS7     1 0.685   -3.091   -0.863    0.866    3.088 #> 8 GWS8     1 2.198   -2.773   -0.731    1.313    2.190 #> 9 GWS9     1 1.910   -2.660   -0.526    1.258    1.928 #> Iteration in WLE/MLE estimation  1   | Maximal change  2.5957  #> Iteration in WLE/MLE estimation  2   | Maximal change  0.9823  #> Iteration in WLE/MLE estimation  3   | Maximal change  0.5808  #> Iteration in WLE/MLE estimation  4   | Maximal change  0.1707  #> Iteration in WLE/MLE estimation  5   | Maximal change  0.0036  #> Iteration in WLE/MLE estimation  6   | Maximal change  0.0002  #> Iteration in WLE/MLE estimation  7   | Maximal change  0  #> ---- #>  WLE Reliability= 0.886           #> .................................................... #>  Plots exported in png format into folder: #>  /home/runner/work/itemselectr/itemselectr/docs/reference/Plots #> Error: Package 'plyr' is needed for applying this #>             function. Please install it. ls(out) #> Warning: ‘out’ converted to character string #> Error in as.environment(pos): no item called \"out\" on the search list out$item.fit #> Error: object 'out' not found"},{"path":"https://deondb1967.github.io/itemselectr/reference/best_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits all possible combinations of k items from a pool of n items to a single-factor model. — best_items","title":"Fits all possible combinations of k items from a pool of n items to a single-factor model. — best_items","text":"function can useful selecting items larger pool items. function allows comparisons possible combinations k items pool respect fit single factor model reliability. function works best number possible unique combinations items less 5000. becomes extremely slow 5000 possible combinations.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/best_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits all possible combinations of k items from a pool of n items to a single-factor model. — best_items","text":"","code":"best_items(x, k)"},{"path":"https://deondb1967.github.io/itemselectr/reference/best_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits all possible combinations of k items from a pool of n items to a single-factor model. — best_items","text":"x data frame containing items. k number items selected.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/best_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fits all possible combinations of k items from a pool of n items to a single-factor model. — best_items","text":"","code":"# Say we want to select five items from pool of nine stress items # The choose() function shows how many possible unique combinations there are choose(ncol(work_stress[1:9]), 5) #> [1] 126 out <- best_items(work_stress[1:9], 5) #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  17%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  21%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |===================                                                   |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  71%   |                                                                               |===================================================                   |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  79%   |                                                                               |========================================================              |  80%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% out #>     Omega Alpha  SRMR   CFI   TLI RMSEA   GFI                        Items #> 78  0.864 0.864 0.004 1.000 1.003 0.000 1.000 GWS2, GWS3, GWS4, GWS7, GWS8 #> 94  0.864 0.864 0.004 1.000 1.003 0.000 1.000 GWS2, GWS4, GWS5, GWS7, GWS8 #> 4   0.865 0.865 0.005 1.000 1.002 0.000 1.000 GWS1, GWS2, GWS3, GWS4, GWS8 #> 72  0.864 0.864 0.005 1.000 1.002 0.000 1.000 GWS2, GWS3, GWS4, GWS5, GWS7 #> 73  0.867 0.867 0.006 1.000 1.001 0.000 1.000 GWS2, GWS3, GWS4, GWS5, GWS8 #> 18  0.865 0.865 0.006 1.000 1.001 0.000 1.000 GWS1, GWS2, GWS4, GWS5, GWS8 #> 106 0.864 0.864 0.006 1.000 1.001 0.000 1.000 GWS3, GWS4, GWS5, GWS6, GWS7 #> 114 0.863 0.863 0.006 1.000 1.001 0.000 1.000 GWS3, GWS4, GWS6, GWS8, GWS9 #> 45  0.862 0.862 0.006 1.000 1.002 0.000 1.000 GWS1, GWS3, GWS4, GWS8, GWS9 #> 117 0.861 0.860 0.006 1.000 1.002 0.000 1.000 GWS3, GWS5, GWS6, GWS7, GWS9 #> 91  0.860 0.860 0.006 1.000 1.002 0.000 1.000 GWS2, GWS4, GWS5, GWS6, GWS7 #> 8   0.867 0.867 0.007 1.000 1.001 0.000 1.000 GWS1, GWS2, GWS3, GWS5, GWS8 #> 1   0.866 0.866 0.007 1.000 1.001 0.000 1.000 GWS1, GWS2, GWS3, GWS4, GWS5 #> 38  0.866 0.866 0.007 1.000 1.001 0.000 1.000 GWS1, GWS3, GWS4, GWS5, GWS8 #> 84  0.866 0.866 0.007 1.000 1.001 0.000 1.000 GWS2, GWS3, GWS5, GWS7, GWS8 #> 41  0.865 0.865 0.007 1.000 1.001 0.000 1.000 GWS1, GWS3, GWS4, GWS6, GWS8 #> 42  0.865 0.865 0.007 1.000 1.001 0.000 1.000 GWS1, GWS3, GWS4, GWS6, GWS9 #> 109 0.865 0.865 0.007 1.000 1.001 0.000 1.000 GWS3, GWS4, GWS5, GWS7, GWS8 #> 5   0.864 0.864 0.007 1.000 1.001 0.000 1.000 GWS1, GWS2, GWS3, GWS4, GWS9 #> 15  0.863 0.863 0.007 1.000 1.001 0.000 1.000 GWS1, GWS2, GWS3, GWS8, GWS9 #> 54  0.863 0.863 0.007 1.000 1.001 0.000 1.000 GWS1, GWS3, GWS6, GWS8, GWS9 #> 92  0.863 0.863 0.007 1.000 1.001 0.000 1.000 GWS2, GWS4, GWS5, GWS6, GWS8 #> 112 0.863 0.863 0.007 1.000 1.001 0.000 1.000 GWS3, GWS4, GWS6, GWS7, GWS8 #> 121 0.862 0.862 0.007 1.000 1.001 0.000 1.000 GWS4, GWS5, GWS6, GWS7, GWS8 #> 31  0.861 0.861 0.007 1.000 1.001 0.000 1.000 GWS1, GWS2, GWS5, GWS8, GWS9 #> 58  0.861 0.861 0.007 1.000 1.001 0.000 1.000 GWS1, GWS4, GWS5, GWS6, GWS9 #> 61  0.861 0.861 0.007 1.000 1.001 0.000 1.000 GWS1, GWS4, GWS5, GWS8, GWS9 #> 64  0.861 0.861 0.007 1.000 1.001 0.000 1.000 GWS1, GWS4, GWS6, GWS8, GWS9 #> 101 0.861 0.861 0.007 1.000 1.001 0.000 1.000 GWS2, GWS5, GWS6, GWS7, GWS8 #> 124 0.858 0.858 0.007 1.000 1.001 0.000 1.000 GWS4, GWS5, GWS7, GWS8, GWS9 #> 122 0.857 0.857 0.007 1.000 1.001 0.000 1.000 GWS4, GWS5, GWS6, GWS7, GWS9 #> 20  0.864 0.864 0.008 1.000 1.001 0.000 1.000 GWS1, GWS2, GWS4, GWS6, GWS7 #> 71  0.864 0.864 0.008 1.000 1.001 0.000 1.000 GWS2, GWS3, GWS4, GWS5, GWS6 #> 80  0.864 0.863 0.008 1.000 1.001 0.000 1.000 GWS2, GWS3, GWS4, GWS8, GWS9 #> 48  0.863 0.863 0.008 1.000 1.000 0.003 1.000 GWS1, GWS3, GWS5, GWS6, GWS9 #> 77  0.863 0.863 0.008 1.000 1.000 0.000 1.000 GWS2, GWS3, GWS4, GWS6, GWS9 #> 81  0.863 0.863 0.008 1.000 1.001 0.000 1.000 GWS2, GWS3, GWS5, GWS6, GWS7 #> 25  0.862 0.862 0.008 1.000 1.001 0.000 1.000 GWS1, GWS2, GWS4, GWS8, GWS9 #> 75  0.862 0.862 0.008 1.000 1.001 0.000 1.000 GWS2, GWS3, GWS4, GWS6, GWS7 #> 19  0.861 0.861 0.008 1.000 1.001 0.000 1.000 GWS1, GWS2, GWS4, GWS5, GWS9 #> 97  0.861 0.861 0.008 1.000 1.001 0.000 1.000 GWS2, GWS4, GWS6, GWS7, GWS8 #> 113 0.861 0.861 0.008 1.000 1.001 0.000 1.000 GWS3, GWS4, GWS6, GWS7, GWS9 #> 104 0.859 0.859 0.008 1.000 1.001 0.000 1.000 GWS2, GWS5, GWS7, GWS8, GWS9 #> 36  0.867 0.867 0.009 1.000 0.999 0.013 1.000 GWS1, GWS3, GWS4, GWS5, GWS6 #> 43  0.866 0.866 0.009 1.000 1.000 0.010 1.000 GWS1, GWS3, GWS4, GWS7, GWS8 #> 107 0.866 0.866 0.009 1.000 1.000 0.007 1.000 GWS3, GWS4, GWS5, GWS6, GWS8 #> 2   0.865 0.865 0.009 0.999 0.999 0.015 1.000 GWS1, GWS2, GWS3, GWS4, GWS6 #> 3   0.865 0.865 0.009 1.000 1.000 0.008 1.000 GWS1, GWS2, GWS3, GWS4, GWS7 #> 62  0.865 0.865 0.009 1.000 0.999 0.011 1.000 GWS1, GWS4, GWS6, GWS7, GWS8 #> 57  0.864 0.864 0.009 1.000 0.999 0.012 1.000 GWS1, GWS4, GWS5, GWS6, GWS8 #> 108 0.864 0.864 0.009 1.000 1.000 0.009 1.000 GWS3, GWS4, GWS5, GWS6, GWS9 #> 116 0.864 0.864 0.009 1.000 0.999 0.014 1.000 GWS3, GWS5, GWS6, GWS7, GWS8 #> 9   0.863 0.863 0.009 1.000 1.000 0.007 1.000 GWS1, GWS2, GWS3, GWS5, GWS9 #> 16  0.863 0.863 0.009 1.000 1.000 0.006 1.000 GWS1, GWS2, GWS4, GWS5, GWS6 #> 39  0.863 0.863 0.009 1.000 0.999 0.012 1.000 GWS1, GWS3, GWS4, GWS5, GWS9 #> 51  0.862 0.862 0.009 1.000 0.999 0.012 1.000 GWS1, GWS3, GWS5, GWS8, GWS9 #> 79  0.861 0.861 0.009 1.000 1.000 0.006 1.000 GWS2, GWS3, GWS4, GWS7, GWS9 #> 85  0.861 0.861 0.009 1.000 0.999 0.012 1.000 GWS2, GWS3, GWS5, GWS7, GWS9 #> 110 0.860 0.860 0.009 1.000 0.999 0.012 1.000 GWS3, GWS4, GWS5, GWS7, GWS9 #> 123 0.860 0.860 0.009 1.000 1.000 0.008 1.000 GWS4, GWS5, GWS6, GWS8, GWS9 #> 95  0.858 0.858 0.009 1.000 1.000 0.007 1.000 GWS2, GWS4, GWS5, GWS7, GWS9 #> 125 0.858 0.858 0.009 1.000 1.000 0.006 1.000 GWS4, GWS6, GWS7, GWS8, GWS9 #> 40  0.867 0.867 0.010 0.999 0.998 0.019 1.000 GWS1, GWS3, GWS4, GWS6, GWS7 #> 13  0.866 0.866 0.010 0.999 0.998 0.020 1.000 GWS1, GWS2, GWS3, GWS7, GWS8 #> 23  0.866 0.866 0.010 0.999 0.998 0.021 1.000 GWS1, GWS2, GWS4, GWS7, GWS8 #> 21  0.864 0.864 0.010 0.999 0.998 0.019 1.000 GWS1, GWS2, GWS4, GWS6, GWS8 #> 56  0.864 0.864 0.010 0.999 0.999 0.018 1.000 GWS1, GWS4, GWS5, GWS6, GWS7 #> 74  0.864 0.864 0.010 0.999 0.999 0.016 1.000 GWS2, GWS3, GWS4, GWS5, GWS9 #> 111 0.863 0.863 0.010 0.999 0.998 0.019 1.000 GWS3, GWS4, GWS5, GWS8, GWS9 #> 118 0.863 0.863 0.010 0.999 0.998 0.019 1.000 GWS3, GWS5, GWS6, GWS8, GWS9 #> 90  0.862 0.861 0.010 0.999 0.999 0.017 1.000 GWS2, GWS3, GWS7, GWS8, GWS9 #> 96  0.862 0.862 0.010 0.999 0.999 0.016 1.000 GWS2, GWS4, GWS5, GWS8, GWS9 #> 93  0.860 0.860 0.010 0.999 0.999 0.016 1.000 GWS2, GWS4, GWS5, GWS6, GWS9 #> 99  0.860 0.860 0.010 0.999 0.998 0.018 1.000 GWS2, GWS4, GWS6, GWS8, GWS9 #> 100 0.860 0.860 0.010 1.000 0.999 0.013 1.000 GWS2, GWS4, GWS7, GWS8, GWS9 #> 115 0.860 0.860 0.010 1.000 0.999 0.013 1.000 GWS3, GWS4, GWS7, GWS8, GWS9 #> 119 0.860 0.860 0.010 0.999 0.998 0.018 1.000 GWS3, GWS5, GWS7, GWS8, GWS9 #> 120 0.860 0.860 0.010 1.000 0.999 0.012 1.000 GWS3, GWS6, GWS7, GWS8, GWS9 #> 126 0.857 0.857 0.010 0.999 0.999 0.016 1.000 GWS5, GWS6, GWS7, GWS8, GWS9 #> 47  0.866 0.866 0.011 0.999 0.997 0.024 1.000 GWS1, GWS3, GWS5, GWS6, GWS8 #> 52  0.866 0.866 0.011 0.999 0.998 0.022 1.000 GWS1, GWS3, GWS6, GWS7, GWS8 #> 6   0.865 0.865 0.011 0.999 0.997 0.024 1.000 GWS1, GWS2, GWS3, GWS5, GWS6 #> 32  0.865 0.864 0.011 0.999 0.997 0.025 1.000 GWS1, GWS2, GWS6, GWS7, GWS8 #> 82  0.865 0.865 0.011 0.999 0.998 0.020 1.000 GWS2, GWS3, GWS5, GWS6, GWS8 #> 17  0.864 0.864 0.011 0.999 0.998 0.021 1.000 GWS1, GWS2, GWS4, GWS5, GWS7 #> 76  0.864 0.864 0.011 0.999 0.998 0.022 1.000 GWS2, GWS3, GWS4, GWS6, GWS8 #> 86  0.864 0.864 0.011 0.999 0.997 0.024 1.000 GWS2, GWS3, GWS5, GWS8, GWS9 #> 26  0.863 0.863 0.011 0.999 0.998 0.020 1.000 GWS1, GWS2, GWS5, GWS6, GWS7 #> 83  0.863 0.863 0.011 0.999 0.998 0.021 1.000 GWS2, GWS3, GWS5, GWS6, GWS9 #> 87  0.863 0.863 0.011 0.999 0.998 0.020 1.000 GWS2, GWS3, GWS6, GWS7, GWS8 #> 22  0.862 0.862 0.011 0.999 0.998 0.022 1.000 GWS1, GWS2, GWS4, GWS6, GWS9 #> 68  0.860 0.860 0.011 0.999 0.998 0.019 1.000 GWS1, GWS5, GWS6, GWS8, GWS9 #> 67  0.859 0.859 0.011 0.999 0.997 0.023 1.000 GWS1, GWS5, GWS6, GWS7, GWS9 #> 98  0.858 0.858 0.011 0.999 0.997 0.023 1.000 GWS2, GWS4, GWS6, GWS7, GWS9 #> 10  0.866 0.866 0.012 0.998 0.996 0.028 1.000 GWS1, GWS2, GWS3, GWS6, GWS7 #> 12  0.864 0.864 0.012 0.998 0.996 0.028 1.000 GWS1, GWS2, GWS3, GWS6, GWS9 #> 27  0.863 0.863 0.012 0.998 0.997 0.026 1.000 GWS1, GWS2, GWS5, GWS6, GWS8 #> 89  0.863 0.863 0.012 0.998 0.997 0.025 1.000 GWS2, GWS3, GWS6, GWS8, GWS9 #> 88  0.861 0.861 0.012 0.999 0.997 0.024 1.000 GWS2, GWS3, GWS6, GWS7, GWS9 #> 28  0.860 0.860 0.012 0.998 0.996 0.028 1.000 GWS1, GWS2, GWS5, GWS6, GWS9 #> 70  0.860 0.860 0.012 0.998 0.996 0.027 1.000 GWS1, GWS6, GWS7, GWS8, GWS9 #> 103 0.860 0.860 0.012 0.998 0.996 0.028 0.999 GWS2, GWS5, GWS6, GWS8, GWS9 #> 102 0.856 0.856 0.012 0.998 0.996 0.026 1.000 GWS2, GWS5, GWS6, GWS7, GWS9 #> 7   0.866 0.866 0.013 0.998 0.995 0.032 0.999 GWS1, GWS2, GWS3, GWS5, GWS7 #> 29  0.866 0.866 0.013 0.998 0.996 0.031 0.999 GWS1, GWS2, GWS5, GWS7, GWS8 #> 37  0.866 0.866 0.013 0.997 0.995 0.033 0.999 GWS1, GWS3, GWS4, GWS5, GWS7 #> 11  0.865 0.865 0.013 0.998 0.996 0.030 1.000 GWS1, GWS2, GWS3, GWS6, GWS8 #> 59  0.865 0.865 0.013 0.998 0.996 0.030 0.999 GWS1, GWS4, GWS5, GWS7, GWS8 #> 66  0.864 0.864 0.013 0.998 0.995 0.031 0.999 GWS1, GWS5, GWS6, GWS7, GWS8 #> 63  0.862 0.862 0.013 0.998 0.996 0.029 0.999 GWS1, GWS4, GWS6, GWS7, GWS9 #> 34  0.861 0.861 0.013 0.998 0.995 0.031 0.999 GWS1, GWS2, GWS6, GWS8, GWS9 #> 65  0.861 0.861 0.013 0.998 0.996 0.029 0.999 GWS1, GWS4, GWS7, GWS8, GWS9 #> 60  0.859 0.859 0.013 0.998 0.996 0.030 0.999 GWS1, GWS4, GWS5, GWS7, GWS9 #> 69  0.859 0.859 0.013 0.998 0.995 0.031 0.999 GWS1, GWS5, GWS7, GWS8, GWS9 #> 105 0.858 0.858 0.013 0.998 0.995 0.031 0.999 GWS2, GWS6, GWS7, GWS8, GWS9 #> 46  0.867 0.867 0.014 0.997 0.994 0.035 0.999 GWS1, GWS3, GWS5, GWS6, GWS7 #> 49  0.866 0.866 0.014 0.997 0.994 0.036 0.999 GWS1, GWS3, GWS5, GWS7, GWS8 #> 35  0.862 0.862 0.014 0.997 0.994 0.035 0.999 GWS1, GWS2, GWS7, GWS8, GWS9 #> 55  0.861 0.861 0.014 0.997 0.994 0.035 0.999 GWS1, GWS3, GWS7, GWS8, GWS9 #> 30  0.860 0.859 0.014 0.997 0.995 0.033 0.999 GWS1, GWS2, GWS5, GWS7, GWS9 #> 53  0.864 0.864 0.015 0.997 0.993 0.037 0.999 GWS1, GWS3, GWS6, GWS7, GWS9 #> 24  0.862 0.861 0.015 0.997 0.993 0.037 0.999 GWS1, GWS2, GWS4, GWS7, GWS9 #> 44  0.862 0.862 0.015 0.997 0.993 0.038 0.999 GWS1, GWS3, GWS4, GWS7, GWS9 #> 50  0.861 0.861 0.015 0.996 0.992 0.041 0.999 GWS1, GWS3, GWS5, GWS7, GWS9 #> 14  0.863 0.863 0.016 0.996 0.992 0.040 0.999 GWS1, GWS2, GWS3, GWS7, GWS9 #> 33  0.861 0.861 0.016 0.996 0.991 0.042 0.999 GWS1, GWS2, GWS6, GWS7, GWS9"},{"path":"https://deondb1967.github.io/itemselectr/reference/cfa_wlsmv.html","id":null,"dir":"Reference","previous_headings":"","what":"Confirmatory factor analysis of ordinal items with WLSMV estimation — cfa_wlsmv","title":"Confirmatory factor analysis of ordinal items with WLSMV estimation — cfa_wlsmv","text":"Fits one-factor CFA model uncorrelated errors polychoric correlations items WLSMV estimation. function wrapper cfa() function lavaan package.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/cfa_wlsmv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confirmatory factor analysis of ordinal items with WLSMV estimation — cfa_wlsmv","text":"","code":"cfa_wlsmv(x)"},{"path":"https://deondb1967.github.io/itemselectr/reference/cfa_wlsmv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confirmatory factor analysis of ordinal items with WLSMV estimation — cfa_wlsmv","text":"x data frame containing items analysed","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/cfa_wlsmv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confirmatory factor analysis of ordinal items with WLSMV estimation — cfa_wlsmv","text":"output list containing results analysis.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/cfa_wlsmv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confirmatory factor analysis of ordinal items with WLSMV estimation — cfa_wlsmv","text":"","code":"cfa_wlsmv(work_stress[1:9]) #> For constructs with categorical indicators, Zumbo et al.`s (2007) \"ordinal alpha\" is calculated in addition to the standard alpha, which treats ordinal variables as numeric. See Chalmers (2018) for a critique of \"alpha.ord\" and the response by Zumbo & Kroc (2019). Likewise, average variance extracted is calculated from polychoric (polyserial) not Pearson correlations. #> $model #> [1] \"Factor=~ GWS1+ GWS2+ GWS3+ GWS4+ GWS5+ GWS6+ GWS7+ GWS8+ GWS9\" #>  #> $factor.loadings #>      lhs op  rhs   est    se     z pvalue ci.lower ci.upper #> 1 Factor =~ GWS1 0.802 0.012 65.03      0    0.778    0.826 #> 2 Factor =~ GWS2 0.786 0.013 58.98      0    0.760    0.812 #> 3 Factor =~ GWS3 0.797 0.013 62.93      0    0.772    0.822 #> 4 Factor =~ GWS4 0.784 0.014 57.71      0    0.757    0.811 #> 5 Factor =~ GWS5 0.787 0.013 59.23      0    0.761    0.813 #> 6 Factor =~ GWS6 0.792 0.014 58.44      0    0.766    0.819 #> 7 Factor =~ GWS7 0.784 0.013 59.43      0    0.758    0.810 #> 8 Factor =~ GWS8 0.792 0.013 59.42      0    0.766    0.818 #> 9 Factor =~ GWS9 0.764 0.015 52.31      0    0.735    0.792 #>  #> $unique.variances #>       lhs op    rhs   est se  z pvalue ci.lower ci.upper #> 46   GWS1 ~~   GWS1 0.357  0 NA     NA    0.357    0.357 #> 47   GWS2 ~~   GWS2 0.382  0 NA     NA    0.382    0.382 #> 48   GWS3 ~~   GWS3 0.365  0 NA     NA    0.365    0.365 #> 49   GWS4 ~~   GWS4 0.385  0 NA     NA    0.385    0.385 #> 50   GWS5 ~~   GWS5 0.380  0 NA     NA    0.380    0.380 #> 51   GWS6 ~~   GWS6 0.372  0 NA     NA    0.372    0.372 #> 52   GWS7 ~~   GWS7 0.386  0 NA     NA    0.386    0.386 #> 53   GWS8 ~~   GWS8 0.372  0 NA     NA    0.372    0.372 #> 54   GWS9 ~~   GWS9 0.417  0 NA     NA    0.417    0.417 #> 55 Factor ~~ Factor 1.000  0 NA     NA    1.000    1.000 #>  #> $fit.indices #>                pvalue                  npar                 chisq  #>                 0.984                45.000                13.731  #>                    df            tli.robust            cfi.robust  #>                27.000                 0.999                 0.999  #>          rmsea.robust rmsea.ci.lower.robust rmsea.ci.upper.robust  #>                 0.012                 0.000                 0.031  #>          srmr_bentler  #>                 0.008  #>  #> $modification.indices #>      lhs op  rhs    mi    epc sepc.lv sepc.all sepc.nox #> 75  GWS1 ~~ GWS2 0.018 -0.003  -0.003   -0.008   -0.008 #> 76  GWS1 ~~ GWS3 0.846  0.021   0.021    0.059    0.059 #> 77  GWS1 ~~ GWS4 0.000  0.000   0.000    0.000    0.000 #> 78  GWS1 ~~ GWS5 0.755  0.020   0.020    0.054    0.054 #> 79  GWS1 ~~ GWS6 0.890 -0.020  -0.020   -0.056   -0.056 #> 80  GWS1 ~~ GWS7 2.529 -0.034  -0.034   -0.092   -0.092 #> 81  GWS1 ~~ GWS8 0.222  0.011   0.011    0.030    0.030 #> 82  GWS1 ~~ GWS9 0.370  0.014   0.014    0.037    0.037 #> 83  GWS2 ~~ GWS3 0.068  0.006   0.006    0.016    0.016 #> 84  GWS2 ~~ GWS4 0.041  0.005   0.005    0.012    0.012 #> 85  GWS2 ~~ GWS5 0.001  0.001   0.001    0.002    0.002 #> 86  GWS2 ~~ GWS6 1.931  0.034   0.034    0.090    0.090 #> 87  GWS2 ~~ GWS7 0.014  0.003   0.003    0.007    0.007 #> 88  GWS2 ~~ GWS8 0.790 -0.021  -0.021   -0.055   -0.055 #> 89  GWS2 ~~ GWS9 0.909 -0.022  -0.022   -0.056   -0.056 #> 90  GWS3 ~~ GWS4 0.609  0.018   0.018    0.048    0.048 #> 91  GWS3 ~~ GWS5 0.808 -0.021  -0.021   -0.055   -0.055 #> 92  GWS3 ~~ GWS6 1.012 -0.022  -0.022   -0.059   -0.059 #> 93  GWS3 ~~ GWS7 0.092  0.007   0.007    0.018    0.018 #> 94  GWS3 ~~ GWS8 0.406  0.015   0.015    0.039    0.039 #> 95  GWS3 ~~ GWS9 0.935 -0.022  -0.022   -0.056   -0.056 #> 96  GWS4 ~~ GWS5 0.265 -0.012  -0.012   -0.030   -0.030 #> 97  GWS4 ~~ GWS6 0.001  0.001   0.001    0.002    0.002 #> 98  GWS4 ~~ GWS7 0.107  0.007   0.007    0.019    0.019 #> 99  GWS4 ~~ GWS8 0.123 -0.008  -0.008   -0.021   -0.021 #> 100 GWS4 ~~ GWS9 0.259 -0.012  -0.012   -0.030   -0.030 #> 101 GWS5 ~~ GWS6 0.078  0.006   0.006    0.017    0.017 #> 102 GWS5 ~~ GWS7 0.196  0.010   0.010    0.027    0.027 #> 103 GWS5 ~~ GWS8 0.678 -0.019  -0.019   -0.051   -0.051 #> 104 GWS5 ~~ GWS9 0.487  0.017   0.017    0.043    0.043 #> 105 GWS6 ~~ GWS7 0.000  0.000   0.000    0.001    0.001 #> 106 GWS6 ~~ GWS8 0.834  0.021   0.021    0.057    0.057 #> 107 GWS6 ~~ GWS9 0.221 -0.011  -0.011   -0.029   -0.029 #> 108 GWS7 ~~ GWS8 0.276 -0.012  -0.012   -0.032   -0.032 #> 109 GWS7 ~~ GWS9 1.282  0.027   0.027    0.068    0.068 #> 110 GWS8 ~~ GWS9 0.341  0.015   0.015    0.037    0.037 #>  #> $standardized.residuals #>        GWS1   GWS2   GWS3   GWS4   GWS5   GWS6   GWS7   GWS8   GWS9 #> GWS1  0.000                                                         #> GWS2  0.002  0.000                                                  #> GWS3 -0.016 -0.005  0.000                                           #> GWS4  0.000 -0.004 -0.013  0.000                                    #> GWS5 -0.015  0.000  0.015  0.008  0.000                             #> GWS6  0.014 -0.026  0.015 -0.001 -0.005  0.000                      #> GWS7  0.024 -0.002 -0.005 -0.005 -0.008  0.000  0.000               #> GWS8 -0.008  0.015 -0.011  0.006  0.015 -0.016  0.009  0.000        #> GWS9 -0.011  0.017  0.016  0.009 -0.013  0.009 -0.021 -0.011  0.000 #>  #> $reliability #>           Factor #> alpha     0.9177 #> alpha.ord 0.9362 #> omega     0.9178 #> omega2    0.9178 #> omega3    0.9185 #> avevar    0.6204 #>"},{"path":"https://deondb1967.github.io/itemselectr/reference/cor.item.html","id":null,"dir":"Reference","previous_headings":"","what":"Inter-item correlations — cor.item","title":"Inter-item correlations — cor.item","text":"Statistics related inter-item correlations items","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/cor.item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inter-item correlations — cor.item","text":"","code":"cor.item(x)"},{"path":"https://deondb1967.github.io/itemselectr/reference/cor.item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inter-item correlations — cor.item","text":"x Data frame containing items scored direction","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/cor.item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inter-item correlations — cor.item","text":"list containing () inter-item correlation matrix, (b) item average correlation remaining items, (c) squared multiple correlation item remaining items, (d) average inter-item correlation across items, (e) median inter-item correlation across items.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/cor.item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inter-item correlations — cor.item","text":"","code":"cor.item(work_stress[1:9]) #> $Correlation.matrix #>       GWS1  GWS2  GWS3  GWS4  GWS5  GWS6  GWS7  GWS8  GWS9 #> GWS1 1.000 0.565 0.562 0.566 0.551 0.577 0.594 0.557 0.538 #> GWS2 0.565 1.000 0.566 0.553 0.559 0.533 0.551 0.574 0.560 #> GWS3 0.562 0.566 1.000 0.560 0.583 0.580 0.559 0.559 0.564 #> GWS4 0.566 0.553 0.560 1.000 0.563 0.558 0.549 0.562 0.553 #> GWS5 0.551 0.559 0.583 0.563 1.000 0.550 0.543 0.574 0.527 #> GWS6 0.577 0.533 0.580 0.558 0.550 1.000 0.551 0.545 0.551 #> GWS7 0.594 0.551 0.559 0.549 0.543 0.551 1.000 0.560 0.514 #> GWS8 0.557 0.574 0.559 0.562 0.574 0.545 0.560 1.000 0.534 #> GWS9 0.538 0.560 0.564 0.553 0.527 0.551 0.514 0.534 1.000 #>  #> $Average.r #> [1] 0.557 #>  #> $Median.r #> [1] 0.559 #>  #> $Item.average.r #>  GWS1  GWS2  GWS3  GWS4  GWS5  GWS6  GWS7  GWS8  GWS9  #> 0.564 0.558 0.567 0.558 0.556 0.555 0.553 0.558 0.543  #>  #> $Item.average.r.sorted #>  GWS9  GWS7  GWS6  GWS5  GWS2  GWS4  GWS8  GWS1  GWS3  #> 0.543 0.553 0.555 0.556 0.558 0.558 0.558 0.564 0.567  #>  #> $Squared.multiple.correlation #>  GWS1  GWS2  GWS3  GWS4  GWS5  GWS6  GWS7  GWS8  GWS9  #> 0.526 0.511 0.529 0.509 0.509 0.507 0.504 0.511 0.483  #>  #> $Squared.multiple.correlation.sorted #>  GWS9  GWS7  GWS6  GWS5  GWS4  GWS2  GWS8  GWS1  GWS3  #> 0.483 0.504 0.507 0.509 0.509 0.511 0.511 0.526 0.529  #>  #> $Item.total.correlation #>  GWS1  GWS2  GWS3  GWS4  GWS5  GWS6  GWS7  GWS8  GWS9  #> 0.790 0.787 0.791 0.784 0.773 0.771 0.775 0.774 0.759  #>  #> $Item.total.correlation.sorted #>  GWS9  GWS6  GWS5  GWS8  GWS7  GWS4  GWS2  GWS1  GWS3  #> 0.759 0.771 0.773 0.774 0.775 0.784 0.787 0.790 0.791  #>"},{"path":"https://deondb1967.github.io/itemselectr/reference/dif.Rasch.html","id":null,"dir":"Reference","previous_headings":"","what":"Detection of statistically significant differential item functioning via ANCOVA of standardized Rasch residuals — dif.Rasch","title":"Detection of statistically significant differential item functioning via ANCOVA of standardized Rasch residuals — dif.Rasch","text":"Detection statistically significant differential item functioning via ANCOVA standardized Rasch residuals","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/dif.Rasch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detection of statistically significant differential item functioning via ANCOVA of standardized Rasch residuals — dif.Rasch","text":"","code":"dif.Rasch(std.residuals, Theta, Group)"},{"path":"https://deondb1967.github.io/itemselectr/reference/dif.Rasch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detection of statistically significant differential item functioning via ANCOVA of standardized Rasch residuals — dif.Rasch","text":"std.residuals matrix data frame containing standardized residuals Rasch analysis Theta vector containing thetas (person measures) Group vector (factor) containing group membership","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/dif.Rasch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detection of statistically significant differential item functioning via ANCOVA of standardized Rasch residuals — dif.Rasch","text":"DIF results","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/dif.Rasch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detection of statistically significant differential item functioning via ANCOVA of standardized Rasch residuals — dif.Rasch","text":"","code":"# Lowest response category must be scored as 0 work_stress0 <- work_stress[1:9] - 1  ## Fit the partial credit model myRasch <- Simple.Rasch(work_stress0, \"PCM2\") #> ------------------------------------------------------------ #> TAM 4.2-21 (2024-02-19 18:52:08)  #> R version 4.4.2 (2024-10-31) x86_64, linux-gnu | nodename=fv-az570-222 | login=unknown  #>  #> Date of Analysis: 2024-12-13 12:39:31.831637  #> Time difference of 0.2037 secs #> Computation time: 0.2037  #>  #> Multidimensional Item Response Model in TAM  #>  #> IRT Model: PCM2 #> Call: #> TAM::tam.mml(resp = raschdata, irtmodel = irtmodel, verbose = FALSE) #>  #> ------------------------------------------------------------ #> Number of iterations = 83  #> Numeric integration with 21 integration points #>  #> Deviance = 26897  #> Log likelihood = -13448  #> Number of persons = 1377  #> Number of persons used = 1377  #> Number of items = 9  #> Number of estimated parameters = 37  #>     Item threshold parameters = 36  #>     Item slope parameters = 0  #>     Regression parameters = 0  #>     Variance/covariance parameters = 1  #>  #> AIC = 26971  | penalty=74    | AIC=-2*LL + 2*p  #> AIC3 = 27008  | penalty=111    | AIC3=-2*LL + 3*p  #> BIC = 27164  | penalty=267.42    | BIC=-2*LL + log(n)*p  #> aBIC = 27047  | penalty=149.78    | aBIC=-2*LL + log((n-2)/24)*p  (adjusted BIC)  #> CAIC = 27201  | penalty=304.42    | CAIC=-2*LL + [log(n)+1]*p  (consistent AIC)  #> AICc = 26973  | penalty=76.1    | AICc=-2*LL + 2*p + 2*p*(p+1)/(n-p-1)  (bias corrected AIC)  #> GHP = 1.088     | GHP=( -LL + p ) / (#Persons * #Items)  (Gilula-Haberman log penalty)  #>  #> ------------------------------------------------------------ #> EAP Reliability #> [1] 0.907 #> ------------------------------------------------------------ #> Covariances and Variances #>       [,1] #> [1,] 2.854 #> ------------------------------------------------------------ #> Correlations and Standard Deviations (in the diagonal) #>       [,1] #> [1,] 1.689 #> ------------------------------------------------------------ #> Regression Coefficients #>      [,1] #> [1,]    0 #> ------------------------------------------------------------ #> Item Parameters -A*Xsi #>   item    N     M xsi.item AXsi_.Cat1 AXsi_.Cat2 AXsi_.Cat3 AXsi_.Cat4 #> 1 GWS1 1377 1.601    0.775     -1.635     -2.141      0.139      3.100 #> 2 GWS2 1377 1.136    1.455     -0.373      0.407      2.913      5.821 #> 3 GWS3 1377 1.240    1.410     -1.191     -0.330      2.086      5.640 #> 4 GWS4 1377 1.224    1.527     -0.786     -0.177      2.091      6.109 #> 5 GWS5 1377 1.067    1.989     -0.990      0.253      3.320      7.956 #> 6 GWS6 1377 1.084    1.956     -1.201      0.147      3.183      7.824 #> 7 GWS7 1377 1.680    0.685     -2.406     -2.584     -1.033      2.740 #> 8 GWS8 1377 0.942    2.198     -0.575      0.892      4.403      8.791 #> 9 GWS9 1377 1.013    1.910     -0.750      0.635      3.803      7.642 #>   B.Cat1.Dim1 B.Cat2.Dim1 B.Cat3.Dim1 B.Cat4.Dim1 #> 1           1           2           3           4 #> 2           1           2           3           4 #> 3           1           2           3           4 #> 4           1           2           3           4 #> 5           1           2           3           4 #> 6           1           2           3           4 #> 7           1           2           3           4 #> 8           1           2           3           4 #> 9           1           2           3           4 #>  #> Item Parameters Xsi #>               xsi se.xsi #> GWS1        0.775  0.039 #> GWS2        1.455  0.038 #> GWS3        1.410  0.040 #> GWS4        1.527  0.039 #> GWS5        1.989  0.043 #> GWS6        1.956  0.043 #> GWS7        0.685  0.040 #> GWS8        2.198  0.043 #> GWS9        1.910  0.042 #> GWS1_step1 -2.410  0.078 #> GWS1_step2 -1.281  0.065 #> GWS1_step3  1.505  0.093 #> GWS2_step1 -1.828  0.067 #> GWS2_step2 -0.675  0.071 #> GWS2_step3  1.051  0.112 #> GWS3_step1 -2.601  0.071 #> GWS3_step2 -0.548  0.070 #> GWS3_step3  1.005  0.107 #> GWS4_step1 -2.313  0.071 #> GWS4_step2 -0.919  0.070 #> GWS4_step3  0.741  0.101 #> GWS5_step1 -2.979  0.072 #> GWS5_step2 -0.747  0.074 #> GWS5_step3  1.078  0.130 #> GWS6_step1 -3.157  0.073 #> GWS6_step2 -0.609  0.075 #> GWS6_step3  1.080  0.130 #> GWS7_step1 -3.091  0.086 #> GWS7_step2 -0.863  0.066 #> GWS7_step3  0.866  0.081 #> GWS8_step1 -2.773  0.069 #> GWS8_step2 -0.731  0.078 #> GWS8_step3  1.313  0.152 #> GWS9_step1 -2.660  0.069 #> GWS9_step2 -0.526  0.076 #> GWS9_step3  1.258  0.138 #>  #> Item Parameters in IRT parameterization #>   item alpha  beta tau.Cat1 tau.Cat2 tau.Cat3 tau.Cat4 #> 1 GWS1     1 0.775   -2.410   -1.281    1.505    2.186 #> 2 GWS2     1 1.455   -1.828   -0.675    1.051    1.452 #> 3 GWS3     1 1.410   -2.601   -0.548    1.005    2.144 #> 4 GWS4     1 1.527   -2.313   -0.919    0.741    2.491 #> 5 GWS5     1 1.989   -2.979   -0.747    1.078    2.647 #> 6 GWS6     1 1.956   -3.157   -0.609    1.080    2.686 #> 7 GWS7     1 0.685   -3.091   -0.863    0.866    3.088 #> 8 GWS8     1 2.198   -2.773   -0.731    1.313    2.190 #> 9 GWS9     1 1.910   -2.660   -0.526    1.258    1.928 #> Iteration in WLE/MLE estimation  1   | Maximal change  2.5957  #> Iteration in WLE/MLE estimation  2   | Maximal change  0.9823  #> Iteration in WLE/MLE estimation  3   | Maximal change  0.5808  #> Iteration in WLE/MLE estimation  4   | Maximal change  0.1707  #> Iteration in WLE/MLE estimation  5   | Maximal change  0.0036  #> Iteration in WLE/MLE estimation  6   | Maximal change  0.0002  #> Iteration in WLE/MLE estimation  7   | Maximal change  0  #> ---- #>  WLE Reliability= 0.886           #> .................................................... #>  Plots exported in png format into folder: #>  /home/runner/work/itemselectr/itemselectr/docs/reference/Plots #> Error: Package 'plyr' is needed for applying this #>             function. Please install it.  ## Perform the DIF analysis using the standardized residuals, Rasch person measure and group as input dif.Rasch(myRasch$std.residuals, myRasch$thetas[,1], work_stress$gender) #> Error: object 'myRasch' not found"},{"path":"https://deondb1967.github.io/itemselectr/reference/dif.ancova.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs a differential item functioning analysis of polytomous items using ANCOVA — dif.ancova","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — dif.ancova","text":"Differential item functioning analysis polytomous items via ANCOVA","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/dif.ancova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — dif.ancova","text":"","code":"dif.ancova(data, Trait, Group)"},{"path":"https://deondb1967.github.io/itemselectr/reference/dif.ancova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — dif.ancova","text":"data data frame containing items. items scored direction. Trait vector containing measures trait. may total scores across items, mean item scores, factor scores, IRT person measures. Group factor indicating group membership","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/dif.ancova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs a differential item functioning analysis of polytomous items using ANCOVA — dif.ancova","text":"","code":"out <- dif.ancova(work_stress[1:9], rowSums(workStress[1:9]), work_stress$gender) #> Error: object 'workStress' not found out #> Error: object 'out' not found"},{"path":"https://deondb1967.github.io/itemselectr/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://deondb1967.github.io/itemselectr/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> [1] \"Hello, world!\""},{"path":"https://deondb1967.github.io/itemselectr/reference/influential.cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify influential cases and examine their impact — influential.cases","title":"Identify influential cases and examine their impact — influential.cases","text":"Calculates generalized Cook's Distance statistics. Removes specified number cases largest gCD values. Compares factor loadings, fit statistics reliabilities full data set filtered data set.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/influential.cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify influential cases and examine their impact — influential.cases","text":"","code":"influential.cases(x, ncases = 1)"},{"path":"https://deondb1967.github.io/itemselectr/reference/influential.cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify influential cases and examine their impact — influential.cases","text":"x Data frame containing items ncases number cases treat influential. value can set 1 adjusted subsequent analyses.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/influential.cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify influential cases and examine their impact — influential.cases","text":"list containing () factor loadings, (b) fit statistics single factor solution, (c) Cronbach alpha coefficients full filtered data sets.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/influential.cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify influential cases and examine their impact — influential.cases","text":"","code":"influential.cases(work_stress[1:9], 10) #> Error in loadNamespace(x): there is no package called ‘faoutlier’"},{"path":"https://deondb1967.github.io/itemselectr/reference/info.select.html","id":null,"dir":"Reference","previous_headings":"","what":"Item selection based on McDonald's item information statistic — info.select","title":"Item selection based on McDonald's item information statistic — info.select","text":"item selection procedure based item information statistics.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/info.select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Item selection based on McDonald's item information statistic — info.select","text":"","code":"info.select(x, nitems)"},{"path":"https://deondb1967.github.io/itemselectr/reference/info.select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Item selection based on McDonald's item information statistic — info.select","text":"x data frame containing items nitems number items retain scale","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/info.select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Item selection based on McDonald's item information statistic — info.select","text":"function sequentially removes item lowest information statistic pool items. output list containing () data frame shows step item selection process number items removed, name item removed, reliability scale; (b) names items retained; (c) coefficient omega final scale, (d) coefficient alpha final scale.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/info.select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Item selection based on McDonald's item information statistic — info.select","text":"","code":"# Select five items with highest information statistics info.select(work_stress[1:9], 5) #> Omega_h for 1 factor is not meaningful, just omega_t #> Warning: Omega_h and Omega_asymptotic are not meaningful with one factor #> Warning: diag(V) had non-positive or NA entries; the non-finite result may be dubious #> Omega_h for 1 factor is not meaningful, just omega_t #> Warning: Omega_h and Omega_asymptotic are not meaningful with one factor #> Warning: diag(V) had non-positive or NA entries; the non-finite result may be dubious #> Omega_h for 1 factor is not meaningful, just omega_t #> Warning: Omega_h and Omega_asymptotic are not meaningful with one factor #> Warning: diag(V) had non-positive or NA entries; the non-finite result may be dubious #> Omega_h for 1 factor is not meaningful, just omega_t #> Warning: Omega_h and Omega_asymptotic are not meaningful with one factor #> Warning: diag(V) had non-positive or NA entries; the non-finite result may be dubious #> Omega_h for 1 factor is not meaningful, just omega_t #> Warning: Omega_h and Omega_asymptotic are not meaningful with one factor #> Warning: diag(V) had non-positive or NA entries; the non-finite result may be dubious #> Warning: Omega_h and Omega_asymptotic are not meaningful with one factor #> Warning: diag(V) had non-positive or NA entries; the non-finite result may be dubious #> $Steps #>   Items.out Item.removed  Omega #> 1         0         None 0.9188 #> 2         1         GWS9 0.9109 #> 3         2         GWS7 0.8997 #> 4         3         GWS6 0.8857 #> 5         4         GWS5 0.8653 #>  #> $Items.in.scale #> [1] \"GWS1\" \"GWS2\" \"GWS3\" \"GWS4\" \"GWS8\" #>  #> $Omega #> [1] 0.8653 #>  #> $Alpha #>  raw_alpha #>     0.8636 #>"},{"path":"https://deondb1967.github.io/itemselectr/reference/item.information.html","id":null,"dir":"Reference","previous_headings":"","what":"McDonald's item information statistic — item.information","title":"McDonald's item information statistic — item.information","text":"Calculates item information statistics (McDonald, 1999).","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/item.information.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"McDonald's item information statistic — item.information","text":"","code":"item.information(x)"},{"path":"https://deondb1967.github.io/itemselectr/reference/item.information.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"McDonald's item information statistic — item.information","text":"x data frame containing items","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/item.information.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"McDonald's item information statistic — item.information","text":"matrix containing item () unstandardized factor loading, (b) square loading, (c) unique variance, (d) item information.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/item.information.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"McDonald's item information statistic — item.information","text":"","code":"info <- item.information(work_stress[1:9]) #> $`Item information statistic` #>  GWS1  GWS2  GWS3  GWS4  GWS5  GWS6  GWS7  GWS8  GWS9  #> 1.346 1.262 1.366 1.262 1.250 1.239 1.218 1.275 1.113  #>  #> $`Item information statistic sorted` #>  GWS9  GWS7  GWS6  GWS5  GWS4  GWS2  GWS8  GWS1  GWS3  #> 1.113 1.218 1.239 1.250 1.262 1.262 1.275 1.346 1.366  #>  #> $`Item information` #>      Loadings Loadings_squared Uniquenesses Information #> GWS1    0.810            0.656        0.488       1.346 #> GWS2    0.849            0.721        0.571       1.262 #> GWS3    0.792            0.627        0.459       1.366 #> GWS4    0.803            0.644        0.511       1.262 #> GWS5    0.691            0.478        0.382       1.250 #> GWS6    0.675            0.456        0.368       1.239 #> GWS7    0.762            0.580        0.476       1.218 #> GWS8    0.681            0.463        0.363       1.275 #> GWS9    0.693            0.480        0.431       1.113 #>  #> $`Item information sorted` #>      Loadings Loadings_squared Uniquenesses Information #> GWS9    0.693            0.480        0.431       1.113 #> GWS7    0.762            0.580        0.476       1.218 #> GWS6    0.675            0.456        0.368       1.239 #> GWS5    0.691            0.478        0.382       1.250 #> GWS4    0.803            0.644        0.511       1.262 #> GWS2    0.849            0.721        0.571       1.262 #> GWS8    0.681            0.463        0.363       1.275 #> GWS1    0.810            0.656        0.488       1.346 #> GWS3    0.792            0.627        0.459       1.366 #>"},{"path":"https://deondb1967.github.io/itemselectr/reference/item.reliability.index.html","id":null,"dir":"Reference","previous_headings":"","what":"Gulliksen's item reliability index extended to polytomous items — item.reliability.index","title":"Gulliksen's item reliability index extended to polytomous items — item.reliability.index","text":"Takes item-total correlation multiplies item standard deviation","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/item.reliability.index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gulliksen's item reliability index extended to polytomous items — item.reliability.index","text":"","code":"item.reliability.index(x)"},{"path":"https://deondb1967.github.io/itemselectr/reference/item.reliability.index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gulliksen's item reliability index extended to polytomous items — item.reliability.index","text":"x data frame contains items analysed","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/item.reliability.index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gulliksen's item reliability index extended to polytomous items — item.reliability.index","text":"item reliability index item","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/item.reliability.index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gulliksen's item reliability index extended to polytomous items — item.reliability.index","text":"","code":"item.reliability.index(work_stress[1:9]) #> $rel.index #>   GWS1   GWS2   GWS3   GWS4   GWS5   GWS6   GWS7   GWS8   GWS9  #> 0.8454 0.8949 0.8248 0.8421 0.7168 0.6996 0.7969 0.7037 0.7246  #>  #> $sorted.rel.index #>   GWS6   GWS8   GWS5   GWS9   GWS7   GWS3   GWS4   GWS1   GWS2  #> 0.6996 0.7037 0.7168 0.7246 0.7969 0.8248 0.8421 0.8454 0.8949  #>  #> $item.stats #>         n  raw.r  std.r  r.cor r.drop  mean     sd rel.index #> GWS1 1377 0.7904 0.7865 0.7535 0.7217 2.601 1.0696    0.8454 #> GWS2 1377 0.7873 0.7794 0.7437 0.7125 2.136 1.1366    0.8949 #> GWS3 1377 0.7914 0.7899 0.7575 0.7250 2.240 1.0423    0.8248 #> GWS4 1377 0.7836 0.7798 0.7440 0.7127 2.224 1.0747    0.8421 #> GWS5 1377 0.7728 0.7779 0.7419 0.7107 2.067 0.9276    0.7168 #> GWS6 1377 0.7706 0.7770 0.7407 0.7095 2.084 0.9079    0.6996 #> GWS7 1377 0.7754 0.7737 0.7368 0.7060 2.680 1.0277    0.7969 #> GWS8 1377 0.7740 0.7799 0.7444 0.7136 1.942 0.9092    0.7037 #> GWS9 1377 0.7591 0.7622 0.7216 0.6918 2.013 0.9546    0.7246 #>"},{"path":"https://deondb1967.github.io/itemselectr/reference/item.selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Selecting items based on Gulliksen's item reliability index — item.selection","title":"Selecting items based on Gulliksen's item reliability index — item.selection","text":"Iteratively removes item lowest item reliability index pool items. step yields test largest possible variance.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/item.selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selecting items based on Gulliksen's item reliability index — item.selection","text":"","code":"item.selection(x, nitems)"},{"path":"https://deondb1967.github.io/itemselectr/reference/item.selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selecting items based on Gulliksen's item reliability index — item.selection","text":"x data frame contains items analysed nitems number items retain. value never less three.","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/item.selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selecting items based on Gulliksen's item reliability index — item.selection","text":"step number items removed, name last item removed, omega, average item score, standard deviation test.","code":""},{"path":[]},{"path":"https://deondb1967.github.io/itemselectr/reference/large.residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Large factor analysis residuals — large.residuals","title":"Large factor analysis residuals — large.residuals","text":"Identifying large residuals matrix factor analysis residuals","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/large.residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Large factor analysis residuals — large.residuals","text":"","code":"large.residuals(x, upper = 0.08, lower = -0.08)"},{"path":"https://deondb1967.github.io/itemselectr/reference/large.residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Large factor analysis residuals — large.residuals","text":"x square matrix residuals factor analysis upper Upper limit acceptable residuals (defaults 0.08) lower Lower limit acceptable residuals (defaults -0.)","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/large.residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Large factor analysis residuals — large.residuals","text":"Statistics relating residuals","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/large.residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Large factor analysis residuals — large.residuals","text":"","code":"# Find the residuals of a factor analysis myresiduals <- psych::fa(work_stress[1:9], nfactors = 1)$resid  # Identify the pairs of items with the largest residuals myoutput <- large.residuals(x = myresiduals, upper = -.01, lower = .01) #>  #>   The decimal point is 2 digit(s) to the left of the | #>  #>   -2 | 32 #>   -1 |  #>   -1 | 433210 #>   -0 | 999865 #>   -0 | 44321 #>    0 | 00122 #>    0 | 66 #>    1 | 11334 #>    1 | 5579 #>    2 |  #>    2 |  #>    3 | 4 #>  myoutput #> $lower.triangle #>        GWS1   GWS2   GWS3   GWS4   GWS5   GWS6   GWS7   GWS8 GWS9 #> GWS1     NA     NA     NA     NA     NA     NA     NA     NA   NA #> GWS2 -0.001     NA     NA     NA     NA     NA     NA     NA   NA #> GWS3 -0.014 -0.003     NA     NA     NA     NA     NA     NA   NA #> GWS4  0.000 -0.006 -0.009     NA     NA     NA     NA     NA   NA #> GWS5 -0.013  0.002  0.015  0.006     NA     NA     NA     NA   NA #> GWS6  0.014 -0.023  0.013  0.001 -0.005     NA     NA     NA   NA #> GWS7  0.034 -0.002 -0.004 -0.004 -0.009  0.000     NA     NA   NA #> GWS8 -0.009  0.015 -0.010  0.002  0.017 -0.012  0.006     NA   NA #> GWS9 -0.011  0.019  0.013  0.011 -0.013  0.011 -0.022 -0.008   NA #>  #> $coordinates #>      row col #> GWS2   2   1 #> GWS3   3   1 #> GWS4   4   1 #> GWS5   5   1 #> GWS6   6   1 #> GWS7   7   1 #> GWS8   8   1 #> GWS9   9   1 #> GWS3   3   2 #> GWS4   4   2 #> GWS5   5   2 #> GWS6   6   2 #> GWS7   7   2 #> GWS8   8   2 #> GWS9   9   2 #> GWS4   4   3 #> GWS5   5   3 #> GWS6   6   3 #> GWS7   7   3 #> GWS8   8   3 #> GWS9   9   3 #> GWS5   5   4 #> GWS6   6   4 #> GWS7   7   4 #> GWS8   8   4 #> GWS9   9   4 #> GWS6   6   5 #> GWS7   7   5 #> GWS8   8   5 #> GWS9   9   5 #> GWS7   7   6 #> GWS8   8   6 #> GWS9   9   6 #> GWS8   8   7 #> GWS9   9   7 #> GWS9   9   8 #>  #> $items #>     Row Column Cor.residual #> 2  GWS2   GWS1       -0.001 #> 3  GWS3   GWS1       -0.014 #> 4  GWS4   GWS1        0.000 #> 5  GWS5   GWS1       -0.013 #> 6  GWS6   GWS1        0.014 #> 7  GWS7   GWS1        0.034 #> 8  GWS8   GWS1       -0.009 #> 9  GWS9   GWS1       -0.011 #> 10 GWS3   GWS2       -0.003 #> 11 GWS4   GWS2       -0.006 #> 12 GWS5   GWS2        0.002 #> 13 GWS6   GWS2       -0.023 #> 14 GWS7   GWS2       -0.002 #> 15 GWS8   GWS2        0.015 #> 16 GWS9   GWS2        0.019 #> 17 GWS4   GWS3       -0.009 #> 18 GWS5   GWS3        0.015 #> 19 GWS6   GWS3        0.013 #> 20 GWS7   GWS3       -0.004 #> 21 GWS8   GWS3       -0.010 #> 22 GWS9   GWS3        0.013 #> 23 GWS5   GWS4        0.006 #> 24 GWS6   GWS4        0.001 #> 25 GWS7   GWS4       -0.004 #> 26 GWS8   GWS4        0.002 #> 27 GWS9   GWS4        0.011 #> 28 GWS6   GWS5       -0.005 #> 29 GWS7   GWS5       -0.009 #> 30 GWS8   GWS5        0.017 #> 31 GWS9   GWS5       -0.013 #> 32 GWS7   GWS6        0.000 #> 33 GWS8   GWS6       -0.012 #> 34 GWS9   GWS6        0.011 #> 35 GWS8   GWS7        0.006 #> 36 GWS9   GWS7       -0.022 #> 37 GWS9   GWS8       -0.008 #>  #> $sorted.residuals #>  [1] -0.023 -0.022 -0.014 -0.013 -0.013 -0.012 -0.011 -0.010 -0.009 -0.009 #> [11] -0.009 -0.008 -0.006 -0.005 -0.004 -0.004 -0.003 -0.002 -0.001  0.000 #> [21]  0.000  0.001  0.002  0.002  0.006  0.006  0.011  0.011  0.013  0.013 #> [31]  0.014  0.015  0.015  0.017  0.019  0.034 #>  #> $median.residual #> [1] -0.001 #>  #> $mean.residual #> [1] 0 #>  #> $max.residual #> [1] 0.034 #>  #> $min.residual #> [1] -0.023 #>  #> $proportion.large.residuals #> [1] 1 #>  #> $number.big.residuals #> [1] 36 #>"},{"path":"https://deondb1967.github.io/itemselectr/reference/make.norms.html","id":null,"dir":"Reference","previous_headings":"","what":"Create norms for psychological or educational tests — make.norms","title":"Create norms for psychological or educational tests — make.norms","text":"Creates percentiles, McCall T-scores (M = 50, SD = 10) stanines (M = 5, SD = 2)","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/make.norms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create norms for psychological or educational tests — make.norms","text":"","code":"make.norms(xsum)"},{"path":"https://deondb1967.github.io/itemselectr/reference/make.norms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create norms for psychological or educational tests — make.norms","text":"xsum vector raw total scores test (missing data)","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/make.norms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create norms for psychological or educational tests — make.norms","text":"","code":"# Create norms for the work_stress scale Stotal <- rowSums(work_stress[1:9]) make.norms(Stotal)  #>  Raw_Score Percentile T_Score Stanine #>          9        1.8      29       1 #>         10        5.7      34       2 #>         11        9.2      37       2 #>         12       12.4      38       3 #>         13       16.6      40       3 #>         14       21.3      42       3 #>         15       26.2      44       4 #>         16       31.4      45       4 #>         17       37.3      47       4 #>         18       43.0      48       5 #>         19       48.6      50       5 #>         20       55.2      51       5 #>         21       60.7      53       6 #>         22       65.1      54       6 #>         23       69.8      55       6 #>         24       74.3      57       6 #>         25       78.2      58       7 #>         26       81.6      59       7 #>         27       84.5      60       7 #>         28       87.1      61       7 #>         29       89.2      62       8 #>         30       91.0      63       8 #>         31       92.7      65       8 #>         32       93.8      65       8 #>         33       94.7      66       8 #>         34       95.5      67       8 #>         35       96.4      68       9 #>         36       96.9      69       9 #>         37       97.4      69       9 #>         38       98.0      71       9 #>         39       98.7      72       9 #>         40       99.2      74       9 #>         42       99.4      75       9 #>         43       99.6      76       9 #>         44       99.7      78       9 #>         45       99.9      81       9"},{"path":"https://deondb1967.github.io/itemselectr/reference/reverse.code.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse code items — reverse.code","title":"Reverse code items — reverse.code","text":"Reflects scoring items","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/reverse.code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse code items — reverse.code","text":"","code":"reverse.code(x, min.score, max.score, items)"},{"path":"https://deondb1967.github.io/itemselectr/reference/reverse.code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse code items — reverse.code","text":"x Data frame containing items, may need reverse coded min.score Minimum possible score items max.score Maximum possible score items items vector item names column numbers items need reverse coded","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/reverse.code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse code items — reverse.code","text":"data frame","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/reverse.code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse code items — reverse.code","text":"","code":"library(psychTools) #> Error in library(psychTools): there is no package called ‘psychTools’ data(bfi)  ## Perform principal components analysis to observe the signs of the component loadings psych::pca(bfi[1:25], 5) #> Principal Components Analysis #> Call: principal(r = r, nfactors = nfactors, residuals = residuals,  #>     rotate = rotate, n.obs = n.obs, covar = covar, scores = scores,  #>     missing = missing, impute = impute, oblique.scores = oblique.scores,  #>     method = method, use = use, cor = cor, correct = 0.5, weight = NULL) #> Standardized loadings (pattern matrix) based upon correlation matrix #>      RC2   RC1   RC3   RC5   RC4   h2   u2 com #> A1  0.16  0.13  0.08 -0.63 -0.13 0.46 0.54 1.4 #> A2  0.03  0.21  0.13  0.71  0.07 0.57 0.43 1.3 #> A3  0.01  0.35  0.09  0.68  0.05 0.59 0.41 1.6 #> A4 -0.06  0.19  0.26  0.53 -0.17 0.41 0.59 2.0 #> A5 -0.12  0.44  0.08  0.56  0.04 0.54 0.46 2.1 #> C1  0.03  0.07  0.65 -0.01  0.21 0.47 0.53 1.2 #> C2  0.11  0.04  0.74  0.10  0.09 0.58 0.42 1.1 #> C3 -0.01  0.00  0.67  0.13 -0.04 0.47 0.53 1.1 #> C4  0.28 -0.04 -0.67 -0.05 -0.12 0.54 0.46 1.4 #> C5  0.33 -0.17 -0.62 -0.05  0.06 0.52 0.48 1.7 #> E1  0.04 -0.68  0.09 -0.07 -0.05 0.48 0.52 1.1 #> E2  0.27 -0.72 -0.07 -0.08 -0.02 0.60 0.40 1.3 #> E3  0.04  0.63  0.07  0.24  0.26 0.53 0.47 1.7 #> E4 -0.10  0.70  0.09  0.28 -0.12 0.61 0.39 1.5 #> E5  0.05  0.58  0.34  0.04  0.20 0.50 0.50 1.9 #> N1  0.79  0.07 -0.04 -0.21 -0.08 0.69 0.31 1.2 #> N2  0.79  0.04 -0.03 -0.19 -0.02 0.66 0.34 1.1 #> N3  0.79 -0.04 -0.06 -0.03  0.00 0.63 0.37 1.0 #> N4  0.65 -0.34 -0.17  0.02  0.09 0.57 0.43 1.7 #> N5  0.63 -0.16 -0.01  0.15 -0.17 0.48 0.52 1.4 #> O1  0.02  0.28  0.13  0.02  0.59 0.44 0.56 1.5 #> O2  0.23  0.03 -0.09  0.11 -0.59 0.43 0.57 1.4 #> O3  0.04  0.36  0.08  0.11  0.64 0.55 0.45 1.7 #> O4  0.28 -0.24 -0.02  0.24  0.50 0.44 0.56 2.6 #> O5  0.12  0.01 -0.04 -0.03 -0.68 0.48 0.52 1.1 #>  #>                        RC2  RC1  RC3  RC5  RC4 #> SS loadings           3.18 3.09 2.56 2.32 2.11 #> Proportion Var        0.13 0.12 0.10 0.09 0.08 #> Cumulative Var        0.13 0.25 0.35 0.45 0.53 #> Proportion Explained  0.24 0.23 0.19 0.17 0.16 #> Cumulative Proportion 0.24 0.47 0.67 0.84 1.00 #>  #> Mean item complexity =  1.5 #> Test of the hypothesis that 5 components are sufficient. #>  #> The root mean square of the residuals (RMSR) is  0.06  #>  with the empirical chi square  5469  with prob <  0  #>  #> Fit based upon off diagonal values = 0.92 items <- c(\"A1\", \"C4\", \"C5\", \"E1\", \"E2\", \"O2\", \"O5\") bfi.new <- reverse.code(bfi[1:25], min.score = 1, max.score = 6, items) #> Error in reverse.code(bfi[1:25], min.score = 1, max.score = 6, items): unused arguments (min.score = 1, max.score = 6) psych::pca(bfi.new[1:25], 5) #> Error: object 'bfi.new' not found"},{"path":"https://deondb1967.github.io/itemselectr/reference/work_stress.html","id":null,"dir":"Reference","previous_headings":"","what":"General Work Stress Scale data — work_stress","title":"General Work Stress Scale data — work_stress","text":"Simulated data based item parameters General Work Stress Scale items employ five-point frequency response scale: 1 = Never, 2 = Rarely, 3 = Sometimes, 4 = Often, 5 = Always","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/work_stress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Work Stress Scale data — work_stress","text":"","code":"work_stress"},{"path":[]},{"path":"https://deondb1967.github.io/itemselectr/reference/work_stress.html","id":"work-stress","dir":"Reference","previous_headings":"","what":"work_stress","title":"General Work Stress Scale data — work_stress","text":"data frame 1,377 rows 10 columns: gws1 work make stressed wish different job? gws2 get stressed work want quit? gws3 worry wake go work morning? gws4 find difficult sleep night worry work? gws5 get stressed work forget important tasks? gws6 work make stressed find hard concentrate tasks? gws7 spend lot time worrying work? gws8 feel like cope work anymore? gws9 work make stressed lose temper? gender 0 = men, 1 = women","code":""},{"path":"https://deondb1967.github.io/itemselectr/reference/work_stress.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"General Work Stress Scale data — work_stress","text":"data simulated using item parameters Rasch partial credit model analysis.","code":""}]
